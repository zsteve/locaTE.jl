(undo-tree-save-format-version . 1)
"6ed4c497d6024c4a97f5689a4c16f6af7817a727"
[nil nil nil nil (25315 34749 467088 373000) 0 nil]
([nil nil ((nil rear-nonsticky nil 1 . 2) (#("
" 0 1 (fontified nil)) . -189) (1 . 190) (t . -1)) nil (25315 34749 467085 998000) 0 nil])
([nil nil ((#("

" 0 1 (rear-nonsticky t fontified t) 1 2 (fontified t)) . 1) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -2) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1)) nil (25315 34749 467076 849000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . -186) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) 187 (t 25315 34749 472507 707000)) nil (25315 34853 677604 936000) 0 nil])
([nil nil ((186 . 187)) nil (25315 34853 677443 183000) 0 nil])
([nil nil ((nil rear-nonsticky nil 186 . 187) (#("
" 0 1 (fontified nil)) . -812) (186 . 813) 185 (t 25315 34853 681935 864000)) nil (25315 34861 906005 526000) 0 nil])
([nil nil ((186 . 187)) nil (25315 34861 905997 494000) 0 nil])
([nil nil ((nil rear-nonsticky nil 814 . 815) (#("
" 0 1 (fontified nil)) . -4967) (814 . 4968) (t 25315 34861 911890 702000)) nil (25315 34875 952581 494000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 814) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1)) nil (25315 34875 952572 973000) 0 nil])
([nil nil ((nil rear-nonsticky nil 4966 . 4967) (#("
" 0 1 (fontified nil)) . -5006) (4966 . 5007) (t 25315 34875 958480 289000)) nil (25315 34888 815559 847000) 0 nil])
([nil nil ((5006 . 5007)) nil (25315 34888 815551 815000) 0 nil])
([nil nil ((#("cartesian_to_index(i, j; N) = N*(j-1)+i
" 0 18 (face font-lock-function-name-face fontified t) 18 39 (fontified t) 39 40 (fontified t)) . 4967) (undo-tree-id278 . -39) (undo-tree-id279 . -40) (t 25315 34888 825076 351000)) nil (25315 34892 74926 517000) 0 nil])
([nil nil ((nil rear-nonsticky nil 186 . 187) (#("
" 0 1 (fontified nil)) . -226) (186 . 227) 106) nil (25315 34892 74908 777000) 0 nil])
([nil nil ((nil rear-nonsticky nil 227 . 228) (#("
" 0 1 (fontified nil)) . -274) (227 . 275) (t 25315 34892 85058 462000)) nil (25315 34901 959544 404000) 0 nil])
([nil nil ((274 . 275)) nil (25315 34901 959537 699000) 0 nil])
([nil nil ((#("function discretization(x::AbstractVector; alg = DiscretizeUniformWidth(:scott))
    be = binedges(alg, x)
    disc = LinearDiscretizer(be)
    bi = encode(disc, x)
    return be, bi
end

function discretizations_bulk(X::AbstractMatrix; alg = DiscretizeBayesianBlocks())
    binedges_all = [binedges(alg, x) for x in eachcol(X)]
    discretizers_all = map(LinearDiscretizer, binedges_all)
    # counts_all = [get_discretization_counts(d, x) for (d, x) in zip(discretizers_all, eachcol(X))]
    binids_all = [encode(discretizers_all[i], X[:, i]) for i = 1:size(X, 2)]
    return discretizers_all, binedges_all, binids_all
end

#=
function discretized_joint_distribution(prod::AbstractMatrix, X::AbstractMatrix, i::Int, j::Int, binids_i::Vector{Int}, binids_j::Vector{Int}, binedges_i::AbstractVector, binedges_j::AbstractVector)
    # computes the discrete joint distribution of 
    # (X[i], X_next[j], X[j])
    π_genes = zeros(length(binedges_i), length(binedges_j), length(binedges_j))
    @inbounds for m = 1:size(X, 1)
        @inbounds for n = 1:size(X, 1)
            π_genes[binids_i[m], binids_j[n], binids_j[m]] += prod[m, n] 
        end
    end
    return π_genes
end
=#

function discretized_joint_distribution(prod::AbstractSparseMatrix, X0::AbstractMatrix, X1::AbstractMatrix, i::Int, j::Int; alg = DiscretizeUniformWidth(:scott))
    row_idxs = findnz(sum(prod; dims = 2))[1]
    col_idxs = findnz(sum(prod; dims = 1))[2]
    binedges_i_prev, binids_i_prev = discretization(X0[row_idxs, i]; alg = alg)
    binedges_j_next, binids_j_next = discretization(X1[col_idxs, j]; alg = alg)
    binedges_j_prev, binids_j_prev = discretization(X0[row_idxs, j]; alg = alg)
    discretized_joint_distribution(prod[row_idxs, :][:, col_idxs], 
                                    binids_i_prev, binids_j_next, binids_j_prev,
                                    binedges_i_prev, binedges_j_next, binedges_j_prev)
end

function discretized_joint_distribution_undir(prod::AbstractSparseMatrix, X::AbstractMatrix, i::Int, j::Int; alg = DiscretizeUniformWidth(:scott))
    row_idxs = findnz(sum(prod; dims = 2))[1]
    col_idxs = findnz(sum(prod; dims = 1))[2]
    binedges_i, binids_i = discretization(X[row_idxs, i]; alg = alg)
    binedges_j, binids_j = discretization(X[col_idxs, j]; alg = alg)
    discretized_joint_distribution_undir(prod[row_idxs, :][:, col_idxs],
                                        binids_i, binids_j,
                                        binedges_i, binedges_j)
end

function discretized_joint_distribution_undir(p::AbstractSparseVector, X::AbstractMatrix, i::Int, j::Int; alg = DiscretizeUniformWidth(:scott))
    idxs = findnz(p)[1]
    binedges_i, binids_i = discretization(X[idxs, i]; alg = alg)
    binedges_j, binids_j = discretization(X[idxs, j]; alg = alg)
    discretized_joint_distribution_undir(p[idxs],
                                        binids_i, binids_j,
                                        binedges_i, binedges_j)
end

function discretized_joint_distribution(prod::AbstractSparseMatrix, 
                                        binids_i_prev::Vector{Int}, binids_j_next::Vector{Int}, binids_j_prev::Vector{Int}, 
                                        binedges_i_prev::AbstractVector, binedges_j_next::AbstractVector, binedges_j_prev::AbstractVector)
    # computes the discrete joint distribution of 
    # (X[i], X_next[j], X[j])
    π_genes = zeros(length(binedges_i_prev)-1, length(binedges_j_next)-1, length(binedges_j_prev)-1) # this should be relatively small...
    for (m, n, p) in zip(findnz(prod)...)
            π_genes[binids_i_prev[m], binids_j_next[n], binids_j_prev[m]] += p
    end
    return π_genes
end

function discretized_joint_distribution_undir(p::AbstractSparseVector,
                                             binids_i::Vector{Int}, binids_j::Vector{Int},
                                             binedges_i::AbstractVector, binedges_j::AbstractVector)
    # compute the discrete joint distribution of (X[i], X[j])
    π_genes = zeros(length(binedges_i)-1, length(binedges_j)-1) # this should be relatively small...
    for (m, q) in zip(findnz(p)...)
            π_genes[binids_i[m], binids_j[m]] += q
    end
    return π_genes
end

function discretized_joint_distribution_undir(prod::AbstractSparseMatrix,
                                             binids_i::Vector{Int}, binids_j::Vector{Int},
                                             binedges_i::AbstractVector, binedges_j::AbstractVector)
    # compute the discrete joint distribution of (X[i], X[j])
    π_genes = zeros(length(binedges_i)-1, length(binedges_j)-1) # this should be relatively small...
    for (m, n, p) in zip(findnz(prod)...)
            π_genes[binids_i[m], binids_j[n]] += p
    end
    return π_genes
end

" 0 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 23 (face font-lock-function-name-face fontified t) 23 27 (fontified t) 27 41 (face font-lock-type-face fontified t) 41 72 (fontified t) 72 78 (face julia-quoted-symbol-face fontified t) 78 81 (fontified t) 81 169 (fontified t) 169 175 (face font-lock-keyword-face fontified t) 175 183 (fontified t) 183 186 (face font-lock-keyword-face fontified t) 186 188 (fontified t) 188 196 (face font-lock-keyword-face fontified t) 196 197 (fontified t) 197 217 (face font-lock-function-name-face fontified t) 217 221 (fontified t) 221 235 (face font-lock-type-face fontified t) 235 308 (fontified t) 308 311 (face font-lock-keyword-face fontified t) 311 314 (fontified t) 314 316 (face font-lock-keyword-face fontified t) 316 393 (fontified t) 393 395 (face font-lock-comment-delimiter-face fontified t) 395 490 (face font-lock-comment-face fontified t) 490 545 (fontified t) 545 548 (face font-lock-keyword-face fontified t) 548 551 (fontified t) 551 552 (face font-lock-keyword-face fontified t) 552 571 (fontified t) 571 577 (face font-lock-keyword-face fontified t) 577 621 (fontified t) 621 624 (face font-lock-keyword-face fontified t) 624 625 (fontified t) 625 626 (fontified t) 626 627 (face font-lock-comment-delimiter-face fontified t) 627 629 (face font-lock-comment-face fontified t) 629 1182 (face font-lock-comment-face fontified t) 1182 1184 (fontified t) 1184 1192 (face font-lock-keyword-face fontified t) 1192 1193 (fontified t) 1193 1223 (face font-lock-function-name-face fontified t) 1223 1230 (fontified t) 1230 1250 (face font-lock-type-face fontified t) 1250 1256 (fontified t) 1256 1270 (face font-lock-type-face fontified t) 1270 1276 (fontified t) 1276 1277 (face font-lock-type-face fontified t) 1277 1290 (face font-lock-type-face fontified t) 1290 1295 (fontified t) 1295 1298 (face font-lock-type-face fontified t) 1298 1303 (fontified t) 1303 1306 (face font-lock-type-face fontified t) 1306 1337 (fontified t) 1337 1343 (face julia-quoted-symbol-face fontified t) 1343 1346 (fontified t) 1346 1452 (fontified t) 1452 1499 (fontified t) 1499 1500 (fontified t) 1500 1518 (fontified t) 1518 1581 (fontified t) 1581 1598 (fontified t) 1598 1914 (fontified t) 1914 1917 (face font-lock-keyword-face fontified t) 1917 1919 (fontified t) 1919 1927 (face font-lock-keyword-face fontified t) 1927 1928 (fontified t) 1928 1964 (face font-lock-function-name-face fontified t) 1964 1971 (fontified t) 1971 1991 (face font-lock-type-face fontified t) 1991 1996 (fontified t) 1996 2010 (face font-lock-type-face fontified t) 2010 2015 (fontified t) 2015 2018 (face font-lock-type-face fontified t) 2018 2023 (fontified t) 2023 2026 (face font-lock-type-face fontified t) 2026 2057 (fontified t) 2057 2063 (face julia-quoted-symbol-face fontified t) 2063 2125 (fontified t) 2125 2129 (fontified t) 2129 2158 (fontified t) 2158 2493 (fontified t) 2493 2496 (face font-lock-keyword-face fontified t) 2496 2498 (fontified t) 2498 2506 (face font-lock-keyword-face fontified t) 2506 2507 (fontified t) 2507 2543 (face font-lock-function-name-face fontified t) 2543 2547 (fontified t) 2547 2567 (face font-lock-type-face fontified t) 2567 2572 (fontified t) 2572 2586 (face font-lock-type-face fontified t) 2586 2591 (fontified t) 2591 2594 (face font-lock-type-face fontified t) 2594 2599 (fontified t) 2599 2602 (face font-lock-type-face fontified t) 2602 2633 (fontified t) 2633 2639 (face julia-quoted-symbol-face fontified t) 2639 2846 (fontified t) 2846 2970 (fontified t) 2970 2973 (face font-lock-keyword-face fontified t) 2973 2974 (fontified t) 2974 2975 (fontified t) 2975 2983 (face font-lock-keyword-face fontified t) 2983 2984 (fontified t) 2984 3014 (face font-lock-function-name-face fontified t) 3014 3018 (fontified t) 3018 3021 (fontified t) 3021 3041 (fontified t face font-lock-type-face) 3041 3044 (fontified t) 3044 3098 (fontified t) 3098 3099 (fontified t) 3099 3105 (face font-lock-type-face fontified t) 3105 3127 (fontified t) 3127 3133 (face font-lock-type-face fontified t) 3133 3155 (fontified t) 3155 3161 (face font-lock-type-face fontified t) 3161 3169 (fontified t) 3169 3226 (fontified t) 3226 3240 (face font-lock-type-face fontified t) 3240 3259 (fontified t) 3259 3273 (face font-lock-type-face fontified t) 3273 3292 (fontified t) 3292 3306 (face font-lock-type-face fontified t) 3306 3312 (fontified t) 3312 3314 (face font-lock-comment-delimiter-face fontified t) 3314 3359 (face font-lock-comment-face fontified t) 3359 3363 (fontified t) 3363 3365 (face font-lock-comment-delimiter-face fontified t) 3365 3389 (face font-lock-comment-face fontified t) 3389 3490 (fontified t) 3490 3492 (face font-lock-comment-delimiter-face fontified t) 3492 3527 (face font-lock-comment-face fontified t) 3527 3531 (fontified t) 3531 3534 (face font-lock-keyword-face fontified t) 3534 3545 (fontified t) 3545 3547 (face font-lock-keyword-face fontified t) 3547 3652 (fontified t) 3652 3655 (face font-lock-keyword-face fontified t) 3655 3658 (fontified t) 3658 3660 (fontified t) 3660 3666 (face font-lock-keyword-face fontified t) 3666 3675 (fontified t) 3675 3678 (face font-lock-keyword-face fontified t) 3678 3679 (fontified t) 3679 3680 (fontified t) 3680 3688 (face font-lock-keyword-face fontified t) 3688 3689 (fontified t) 3689 3725 (face font-lock-function-name-face fontified t) 3725 3729 (fontified t) 3729 3749 (face font-lock-type-face fontified t) 3749 3806 (fontified t) 3806 3812 (face font-lock-type-face fontified t) 3812 3829 (fontified t) 3829 3835 (face font-lock-type-face fontified t) 3835 3899 (fontified t) 3899 3913 (face font-lock-type-face fontified t) 3913 3927 (fontified t) 3927 3941 (face font-lock-type-face fontified t) 3941 3947 (fontified t) 3947 3949 (face font-lock-comment-delimiter-face fontified t) 3949 4005 (face font-lock-comment-face fontified t) 4005 4069 (fontified t) 4069 4071 (face font-lock-comment-delimiter-face fontified t) 4071 4106 (face font-lock-comment-face fontified t) 4106 4110 (fontified t) 4110 4113 (face font-lock-keyword-face fontified t) 4113 4121 (fontified t) 4121 4123 (face font-lock-keyword-face fontified t) 4123 4197 (fontified t) 4197 4200 (face font-lock-keyword-face fontified t) 4200 4205 (fontified t) 4205 4211 (face font-lock-keyword-face fontified t) 4211 4220 (fontified t) 4220 4223 (face font-lock-keyword-face fontified t) 4223 4225 (fontified t) 4225 4233 (face font-lock-keyword-face fontified t) 4233 4234 (fontified t) 4234 4270 (face font-lock-function-name-face fontified t) 4270 4277 (fontified t) 4277 4297 (face font-lock-type-face fontified t) 4297 4354 (fontified t) 4354 4360 (face font-lock-type-face fontified t) 4360 4377 (fontified t) 4377 4383 (face font-lock-type-face fontified t) 4383 4447 (fontified t) 4447 4461 (face font-lock-type-face fontified t) 4461 4474 (fontified t) 4474 4475 (fontified t) 4475 4489 (face font-lock-type-face fontified t) 4489 4491 (fontified t) 4491 4495 (fontified t) 4495 4497 (face font-lock-comment-delimiter-face fontified t) 4497 4544 (face font-lock-comment-face fontified t) 4544 4553 (fontified t face font-lock-comment-face) 4553 4617 (fontified t) 4617 4619 (face font-lock-comment-delimiter-face fontified t) 4619 4654 (face font-lock-comment-face fontified t) 4654 4658 (fontified t) 4658 4661 (face font-lock-keyword-face fontified t) 4661 4669 (fontified t) 4669 4672 (fontified t) 4672 4674 (face font-lock-keyword-face fontified t) 4674 4696 (fontified t) 4696 4751 (fontified t) 4751 4754 (face font-lock-keyword-face fontified t) 4754 4759 (fontified t) 4759 4765 (face font-lock-keyword-face fontified t) 4765 4774 (fontified t) 4774 4777 (face font-lock-keyword-face fontified t) 4777 4778 (fontified t) 4778 4779 (fontified t rear-nonsticky t)) . 276) (undo-tree-id415 . -4778) (undo-tree-id416 . -4778) (undo-tree-id417 . -625) (undo-tree-id418 . -187) (undo-tree-id419 . -187) (undo-tree-id420 . -625) (undo-tree-id421 . -626) (undo-tree-id422 . -626) (undo-tree-id423 . -626) (undo-tree-id424 . -1183) (undo-tree-id425 . -1183) (undo-tree-id426 . -1918) (undo-tree-id427 . -1918) (undo-tree-id428 . -2497) (undo-tree-id429 . -2497) (undo-tree-id430 . -2974) (undo-tree-id431 . -2974) (undo-tree-id432 . -3679) (undo-tree-id433 . -3679) (undo-tree-id434 . -4224) (undo-tree-id435 . -4224) (undo-tree-id436 . -4778) (undo-tree-id437 . -3679) (undo-tree-id438 . -4778) (undo-tree-id439 . -4778) (undo-tree-id440 . -187) (undo-tree-id441 . -625) (undo-tree-id442 . -1183) (undo-tree-id443 . -1918) (undo-tree-id444 . -2497) (undo-tree-id445 . -2974) (undo-tree-id446 . -3679) (undo-tree-id447 . -4224) 5054 (t 25315 34901 968337 561000)) nil (25315 34936 33550 299000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t rear-nonsticky t)) . 275) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . 1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1)) nil (25315 34936 33470 261000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 227) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (t 25315 34936 41483 920000)) nil (25315 34937 830744 186000) 0 nil])
([nil nil ((#("prox_l1(x; λ = 1.0) = sign(x)*relu(abs(x) - λ)
" 0 7 (face font-lock-function-name-face fontified t) 7 47 (fontified t)) . 227) (undo-tree-id475 . -45) (undo-tree-id476 . -46) (undo-tree-id477 . -45) (undo-tree-id478 . -45) (undo-tree-id479 . -47) (undo-tree-id480 . -47) (undo-tree-id481 . -47) (undo-tree-id482 . -47) (undo-tree-id483 . -47) (undo-tree-id484 . -47) (undo-tree-id485 . -47) (undo-tree-id486 . -47) (undo-tree-id487 . -47) (undo-tree-id488 . -47) (undo-tree-id489 . -47) (undo-tree-id490 . -47) (undo-tree-id491 . -47) (undo-tree-id492 . -47) (undo-tree-id493 . -47) (undo-tree-id494 . -47) (undo-tree-id495 . -47) (undo-tree-id496 . -47) (undo-tree-id497 . -47) (undo-tree-id498 . -47) (undo-tree-id499 . -46) (undo-tree-id500 . -47) (undo-tree-id501 . -47) (undo-tree-id502 . -47) (undo-tree-id503 . -47) (undo-tree-id504 . -47) (undo-tree-id505 . -47) (undo-tree-id506 . -47) (undo-tree-id507 . -47) (undo-tree-id508 . -47) (undo-tree-id509 . -45) (undo-tree-id510 . -45) (undo-tree-id511 . -45) 272 (t 25315 34937 841474 43000)) nil (25324 38898 202978 186000) 0 nil])
([nil nil ((nil rear-nonsticky nil 281 . 282) (nil fontified nil 227 . 282) (227 . 282) (t 25315 35013 1061 608000)) nil (25324 38904 367550 566000) 0 nil] [nil nil ((nil rear-nonsticky nil 232 . 233) (nil fontified nil 227 . 233) (227 . 233) (t 25315 35013 1061 608000)) ((#("opt.jl" 0 5 (fontified nil) 5 6 (rear-nonsticky nil fontified nil)) . 227) (undo-tree-id0 . -5) (undo-tree-id1 . -5) (nil rear-nonsticky t 232 . 233)) (25324 38898 202537 871000) 0 nil])
([nil nil ((227 . 228)) nil (25324 38904 367546 158000) 0 nil])
nil
([nil nil ((283 . 284)) nil (25324 38904 367537 232000) 0 nil])
([nil nil ((283 . 284) (t 25324 38904 370572 363000)) nil (25324 38905 875759 782000) 0 nil])
([nil nil ((nil rear-nonsticky nil 576 . 577) (nil fontified nil 285 . 577) (285 . 577) (t 25324 38905 883905 798000)) nil (25324 38916 236535 108000) 0 nil])
([nil nil ((577 . 578)) nil (25324 38926 733488 106000) 0 nil])
([nil nil ((234 . 250) (t 25324 38916 243906 489000)) nil (25324 38935 397284 198000) 0 nil] [nil nil ((236 . 242) (234 . 236) (t 25324 38916 243906 489000)) ((#("::" 0 2 (fontified nil)) . 234) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (#("Abstra" 0 6 (face font-lock-type-face fontified t)) . 236) (undo-tree-id4 . -5) (undo-tree-id5 . -5)) (25324 38926 732996 107000) 0 nil])
([nil nil ((253 . 269)) nil (25324 38935 397274 109000) 0 nil])
nil
([nil nil ((343 . 357) (#("Abstract" 0 8 (face font-lock-type-face fontified t)) . -343) (undo-tree-id6 . -8) (undo-tree-id7 . -3) (undo-tree-id8 . -3) (undo-tree-id9 . -3) (undo-tree-id10 . -3) (undo-tree-id11 . -3) (undo-tree-id12 . -3) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -5) (undo-tree-id41 . -5) (undo-tree-id42 . -5) (undo-tree-id43 . -5) (undo-tree-id44 . -5) (undo-tree-id45 . -5) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5) (undo-tree-id49 . -5) (undo-tree-id50 . -5) (undo-tree-id51 . -5) (undo-tree-id52 . -5) (undo-tree-id53 . -5) (undo-tree-id54 . -5) (undo-tree-id55 . -5) (undo-tree-id56 . -5) (undo-tree-id57 . -5) (undo-tree-id58 . -5) (undo-tree-id59 . -5) (undo-tree-id60 . -5) (undo-tree-id61 . -5) (undo-tree-id62 . -5) (undo-tree-id63 . -5) (undo-tree-id64 . -5) (undo-tree-id65 . -5) (undo-tree-id66 . -5) (undo-tree-id67 . -6) (undo-tree-id68 . -6) (undo-tree-id69 . -6) (undo-tree-id70 . -6) (undo-tree-id71 . -6) (undo-tree-id72 . -6) (undo-tree-id73 . -6) (undo-tree-id74 . -6) (undo-tree-id75 . -6) (undo-tree-id76 . -6) (undo-tree-id77 . -6) (undo-tree-id78 . -6) (undo-tree-id79 . -6) (undo-tree-id80 . -6) (undo-tree-id81 . -6) (undo-tree-id82 . -6) (undo-tree-id83 . -6) (undo-tree-id84 . -6) (undo-tree-id85 . -6) (undo-tree-id86 . -6) (undo-tree-id87 . -6) (undo-tree-id88 . -6) (undo-tree-id89 . -6) (undo-tree-id90 . -6) (undo-tree-id91 . -6) (undo-tree-id92 . -6) (undo-tree-id93 . -6) (undo-tree-id94 . -7) (undo-tree-id95 . -7) (undo-tree-id96 . -7) (undo-tree-id97 . -7) (undo-tree-id98 . -7) (undo-tree-id99 . -7) (undo-tree-id100 . -7) (undo-tree-id101 . -7) (undo-tree-id102 . -7) (undo-tree-id103 . -7) (undo-tree-id104 . -7) (undo-tree-id105 . -7) (undo-tree-id106 . -7) (undo-tree-id107 . -7) (undo-tree-id108 . -7) (undo-tree-id109 . -7) (undo-tree-id110 . -7) (undo-tree-id111 . -7) (undo-tree-id112 . -7) (undo-tree-id113 . -7) (undo-tree-id114 . -7) (undo-tree-id115 . -7) (undo-tree-id116 . -7) (undo-tree-id117 . -7) (undo-tree-id118 . -7) (undo-tree-id119 . -7) (undo-tree-id120 . -7) (undo-tree-id121 . -8) (undo-tree-id122 . -8) (undo-tree-id123 . -8) (undo-tree-id124 . -8) (undo-tree-id125 . -8) (undo-tree-id126 . -8) (undo-tree-id127 . -8) (undo-tree-id128 . -8) (undo-tree-id129 . -8) (undo-tree-id130 . -8) (undo-tree-id131 . -8) (undo-tree-id132 . -8) (undo-tree-id133 . -8) (undo-tree-id134 . -8) (undo-tree-id135 . -8) (undo-tree-id136 . -8) (undo-tree-id137 . -8) (undo-tree-id138 . -8) (undo-tree-id139 . -8) (undo-tree-id140 . -8) (undo-tree-id141 . -8) (undo-tree-id142 . -8) (undo-tree-id143 . -8) (undo-tree-id144 . -8) (undo-tree-id145 . -8) (undo-tree-id146 . -8) (undo-tree-id147 . -8) (undo-tree-id148 . -8) (undo-tree-id149 . -8) (undo-tree-id150 . -8) (undo-tree-id151 . -8) (undo-tree-id152 . -8) (undo-tree-id153 . -8) (undo-tree-id154 . -8) (undo-tree-id155 . -8) (undo-tree-id156 . -8) (undo-tree-id157 . -8) (undo-tree-id158 . -8) (undo-tree-id159 . -8) (undo-tree-id160 . -8) (undo-tree-id161 . -8) (undo-tree-id162 . -8) (undo-tree-id163 . -8) (undo-tree-id164 . -8) (undo-tree-id165 . -8) (undo-tree-id166 . -8) (undo-tree-id167 . -8) (undo-tree-id168 . -8) (undo-tree-id169 . -8) (undo-tree-id170 . -8) (undo-tree-id171 . -8) (undo-tree-id172 . -8) (undo-tree-id173 . -8) (undo-tree-id174 . -8) (undo-tree-id175 . -8) 351 (341 . 351) (t 25324 38935 403907 768000)) nil (25324 38971 108064 305000) 0 nil])
([nil nil ((360 . 376)) nil (25324 38971 107765 299000) 0 nil])
([nil nil ((379 . 386) (t 25324 38971 113910 154000)) nil (25324 39000 38767 572000) 0 nil])
([nil nil ((381 . 385) (#("Floats" 0 6 (face font-lock-type-face fontified t)) . -381) (undo-tree-id176 . -6) 387 (386 . 387)) nil (25324 39000 38758 515000) 0 nil])
([nil nil ((#("max" 0 3 (fontified t)) . 27) (undo-tree-id471 . -1) 28 (t 25324 39000 47245 419000)) nil (25324 40266 298660 827000) 0 nil])
([nil nil ((27 . 30) (#(" " 0 1 (fontified t)) . -27) (undo-tree-id470 . -1) 28 (27 . 28)) nil (25324 40266 298656 78000) 0 nil])
([nil nil ((#("sum.(A, A') # " 0 12 (fontified t) 12 14 (face font-lock-comment-delimiter-face fontified t)) . 27) (undo-tree-id177 . -13) (undo-tree-id178 . 11) (undo-tree-id179 . -13) (undo-tree-id180 . -13) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -14) (undo-tree-id278 . -13) (undo-tree-id279 . -2) (undo-tree-id280 . -2) (undo-tree-id281 . -2) (undo-tree-id282 . -2) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -2) (undo-tree-id290 . -2) (undo-tree-id291 . -2) (undo-tree-id292 . -2) (undo-tree-id293 . -2) (undo-tree-id294 . -2) (undo-tree-id295 . -2) (undo-tree-id296 . -2) (undo-tree-id297 . -2) (undo-tree-id298 . -2) (undo-tree-id299 . -2) (undo-tree-id300 . -2) (undo-tree-id301 . -2) (undo-tree-id302 . -2) (undo-tree-id303 . -2) (undo-tree-id304 . -2) (undo-tree-id305 . -2) (undo-tree-id306 . -3) (undo-tree-id307 . -3) (undo-tree-id308 . -3) (undo-tree-id309 . -3) (undo-tree-id310 . -3) (undo-tree-id311 . -3) (undo-tree-id312 . -3) (undo-tree-id313 . -3) (undo-tree-id314 . -3) (undo-tree-id315 . -3) (undo-tree-id316 . -3) (undo-tree-id317 . -3) (undo-tree-id318 . -3) (undo-tree-id319 . -3) (undo-tree-id320 . -3) (undo-tree-id321 . -3) (undo-tree-id322 . -3) (undo-tree-id323 . -3) (undo-tree-id324 . -3) (undo-tree-id325 . -3) (undo-tree-id326 . -3) (undo-tree-id327 . -3) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -3) (undo-tree-id332 . -3) (undo-tree-id333 . -4) (undo-tree-id334 . -4) (undo-tree-id335 . -4) (undo-tree-id336 . -4) (undo-tree-id337 . -4) (undo-tree-id338 . -4) (undo-tree-id339 . -4) (undo-tree-id340 . -4) (undo-tree-id341 . -4) (undo-tree-id342 . -4) (undo-tree-id343 . -4) (undo-tree-id344 . -4) (undo-tree-id345 . -4) (undo-tree-id346 . -4) (undo-tree-id347 . -4) (undo-tree-id348 . -4) (undo-tree-id349 . -4) (undo-tree-id350 . -4) (undo-tree-id351 . -4) (undo-tree-id352 . -4) (undo-tree-id353 . -4) (undo-tree-id354 . -4) (undo-tree-id355 . -4) (undo-tree-id356 . -4) (undo-tree-id357 . -4) (undo-tree-id358 . -4) (undo-tree-id359 . -4) (undo-tree-id360 . -4) (undo-tree-id361 . -10) (undo-tree-id362 . -10) (undo-tree-id363 . -10) (undo-tree-id364 . -10) (undo-tree-id365 . -10) (undo-tree-id366 . -10) (undo-tree-id367 . -10) (undo-tree-id368 . -10) (undo-tree-id369 . -10) (undo-tree-id370 . -10) (undo-tree-id371 . -10) (undo-tree-id372 . -10) (undo-tree-id373 . -10) (undo-tree-id374 . -10) (undo-tree-id375 . -10) (undo-tree-id376 . -10) (undo-tree-id377 . -10) (undo-tree-id378 . -10) (undo-tree-id379 . -10) (undo-tree-id380 . -10) (undo-tree-id381 . -10) (undo-tree-id382 . -10) (undo-tree-id383 . -10) (undo-tree-id384 . -10) (undo-tree-id385 . -10) (undo-tree-id386 . -10) (undo-tree-id387 . -10) (undo-tree-id388 . -11) (undo-tree-id389 . -11) (undo-tree-id390 . -11) (undo-tree-id391 . -11) (undo-tree-id392 . -11) (undo-tree-id393 . -11) (undo-tree-id394 . -11) (undo-tree-id395 . -11) (undo-tree-id396 . -11) (undo-tree-id397 . -11) (undo-tree-id398 . -11) (undo-tree-id399 . -11) (undo-tree-id400 . -11) (undo-tree-id401 . -11) (undo-tree-id402 . -11) (undo-tree-id403 . -11) (undo-tree-id404 . -11) (undo-tree-id405 . -11) (undo-tree-id406 . -11) (undo-tree-id407 . -11) (undo-tree-id408 . -11) (undo-tree-id409 . -11) (undo-tree-id410 . -11) (undo-tree-id411 . -11) (undo-tree-id412 . -11) (undo-tree-id413 . -11) (undo-tree-id414 . -11) (undo-tree-id415 . -12) (undo-tree-id416 . -12) (undo-tree-id417 . -12) (undo-tree-id418 . -12) (undo-tree-id419 . -12) (undo-tree-id420 . -12) (undo-tree-id421 . -12) (undo-tree-id422 . -12) (undo-tree-id423 . -12) (undo-tree-id424 . -12) (undo-tree-id425 . -12) (undo-tree-id426 . -12) (undo-tree-id427 . -12) (undo-tree-id428 . -12) (undo-tree-id429 . -12) (undo-tree-id430 . -12) (undo-tree-id431 . -12) (undo-tree-id432 . -12) (undo-tree-id433 . -12) (undo-tree-id434 . -12) (undo-tree-id435 . -12) (undo-tree-id436 . -12) (undo-tree-id437 . -12) (undo-tree-id438 . -12) (undo-tree-id439 . -12) (undo-tree-id440 . -12) (undo-tree-id441 . -12) (undo-tree-id442 . -13) (undo-tree-id443 . -13) (undo-tree-id444 . -13) (undo-tree-id445 . -13) (undo-tree-id446 . -13) (undo-tree-id447 . -13) (undo-tree-id448 . -13) (undo-tree-id449 . -13) (undo-tree-id450 . -13) (undo-tree-id451 . -13) (undo-tree-id452 . -13) (undo-tree-id453 . -13) (undo-tree-id454 . -13) (undo-tree-id455 . -13) (undo-tree-id456 . -13) (undo-tree-id457 . -13) (undo-tree-id458 . -13) (undo-tree-id459 . -13) (undo-tree-id460 . -13) (undo-tree-id461 . -13) (undo-tree-id462 . -13) (undo-tree-id463 . -13) (undo-tree-id464 . -13) (undo-tree-id465 . -13) (undo-tree-id466 . -13) (undo-tree-id467 . -13) (undo-tree-id468 . -13) (undo-tree-id469 . -13) 40) nil (25324 40266 298626 725000) 0 nil])
([nil nil ((659 . 664) (657 . 659) (649 . 657) (#("rate" 0 4 (face font-lock-function-name-face fontified t)) . -649) (undo-tree-id488 . -4) 653 (644 . 653) (#("compu" 0 5 (face font-lock-function-name-face fontified t)) . -644) (undo-tree-id489 . -5) 649 (644 . 649) (#("get" 0 3 (face font-lock-function-name-face fontified t)) . -644) (undo-tree-id490 . -3) 647 (635 . 647) (#("function " 0 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t)) . -635) (undo-tree-id491 . -9) 644 (635 . 644) (634 . 635) (t 25324 40266 307329 962000)) nil (25324 40564 732984 834000) 0 nil])
([nil nil ((nil rear-nonsticky nil 758 . 759) (nil fontified nil 663 . 759) (663 . 759)) nil (25324 40564 732973 583000) 0 nil])
([nil nil ((761 . 764) (757 . 761) (#(" " 0 1 (fontified nil)) . 756) (undo-tree-id487 . -1) (#("   " 0 3 (fontified nil)) . -664) (760 . 761)) nil (25324 40564 732970 528000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -757) 763) nil (25324 40564 732966 210000) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-type-face fontified t)) . -703) (undo-tree-id482 . -1) (#("g" 0 1 (face font-lock-type-face fontified t)) . -704) (undo-tree-id483 . -1) 705 (698 . 705) (#(" " 0 1 (fontified t)) . -698) (undo-tree-id484 . -1) 699 (696 . 699) (#("q" 0 1 (fontified t)) . -696) (undo-tree-id485 . -1) 697 (#(":;" 0 2 (fontified t)) . -697) (undo-tree-id486 . -2) 699 (679 . 699) (658 . 679)) nil (25324 40564 732961 702000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -707) (undo-tree-id472 . -1) 708 (700 . 708) (#("Int64" 0 5 (face font-lock-type-face fontified t)) . -700) (undo-tree-id473 . -5) 705 (701 . 705) (#("N" 0 1 (face font-lock-type-face fontified t)) . -701) (undo-tree-id474 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -702) (undo-tree-id475 . -1) (#("6" 0 1 (face font-lock-type-face fontified t)) . -703) (undo-tree-id476 . -1) (#("5" 0 1 (face font-lock-type-face fontified t)) . -704) (undo-tree-id477 . -1) 705 (700 . 705) (#("Integer" 0 7 (face font-lock-type-face fontified t)) . -700) (undo-tree-id478 . -7) 707 (700 . 707) (#("Integer" 0 7 (face font-lock-type-face fontified t)) . -700) (undo-tree-id479 . -7) 707 (706 . 707) (#("t" 0 1 (face font-lock-type-face fontified t)) . -706) (undo-tree-id480 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -707) (undo-tree-id481 . -1) 708 (703 . 708)) nil (25324 40564 732945 312000) 0 nil])
([nil nil ((809 . 810)) nil (25324 40564 732898 426000) 0 nil])
([nil nil ((709 . 718) (#("J" 0 1 (fontified t)) . -709) (undo-tree-id492 . -1) (#("_" 0 1 (fontified t)) . -710) (undo-tree-id493 . -1) 711 (#("thresh " 0 7 (fontified t)) . -711) (undo-tree-id494 . -7) 718 (707 . 718) (t 25324 40564 740683 219000)) nil (25324 40570 373478 405000) 0 nil])
([nil nil ((#("mi_all[k][1]" 0 12 (fontified t)) . 759) (undo-tree-id495 . -11) (undo-tree-id496 . -11) (undo-tree-id497 . -11) (undo-tree-id498 . -11) (undo-tree-id499 . 1) (undo-tree-id500 . -12) (undo-tree-id501 . 3) (undo-tree-id502 . -10) 770 (t 25324 40570 380683 595000)) nil (25324 40582 236340 631000) 0 nil])
([nil nil ((759 . 760)) nil (25324 40582 236304 675000) 0 nil])
([nil nil ((#("250" 0 3 (fontified t)) . 795) (undo-tree-id505 . -2) 797 (t 25324 40582 244017 721000)) nil (25324 40594 65824 247000) 0 nil])
([nil nil ((796 . 797) (#(" " 0 1 (fontified t)) . -796) (undo-tree-id503 . -1) (#("q" 0 1 (fontified t)) . -797) (undo-tree-id504 . -1) 798 (795 . 798)) nil (25324 40594 65818 366000) 0 nil])
([nil nil ((763 . 774)) nil (25324 40594 65793 671000) 0 nil])
([nil nil ((#("x" 0 1 (fontified t)) . 724) (t 25324 40594 74018 510000)) nil (25324 40596 387699 842000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 724)) nil (25324 40596 387697 648000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 724)) nil (25324 40596 387695 83000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 724)) nil (25324 40596 387685 816000) 0 nil])
([nil nil ((724 . 734) (719 . 724) (t 25324 40596 390685 331000)) nil (25324 40801 992978 289000) 0 nil])
([nil nil ((#("    @info \"hi\"
" 0 4 (fontified t) 4 9 (face julia-macro-face fontified t) 9 10 (fontified t) 10 14 (face font-lock-string-face fontified t) 14 15 (fontified t)) . 720) (undo-tree-id506 . 1) (undo-tree-id507 . -13) (undo-tree-id508 . -13) (undo-tree-id509 . -13) (undo-tree-id510 . -13) (undo-tree-id511 . -13) (undo-tree-id512 . -13) (undo-tree-id513 . -13) (undo-tree-id514 . -13) (undo-tree-id515 . -13) (undo-tree-id516 . -13) (undo-tree-id517 . -13) (undo-tree-id518 . -13) (undo-tree-id519 . -13) (undo-tree-id520 . -13) (undo-tree-id521 . -13) (undo-tree-id522 . -13) (undo-tree-id523 . -13) (undo-tree-id524 . -13) (undo-tree-id525 . -13) (undo-tree-id526 . -13) (undo-tree-id527 . -13) (undo-tree-id528 . -13) (undo-tree-id529 . -13) (undo-tree-id530 . -13) (undo-tree-id531 . -15) (undo-tree-id532 . -15) (undo-tree-id533 . -15) (undo-tree-id534 . -15) (undo-tree-id535 . -15) (undo-tree-id536 . -15) (undo-tree-id537 . -15) (undo-tree-id538 . -15) (undo-tree-id539 . -15) (undo-tree-id540 . -15) (undo-tree-id541 . -15) (undo-tree-id542 . -15) (undo-tree-id543 . -15) (undo-tree-id544 . -15) (undo-tree-id545 . -15) (undo-tree-id546 . -15) (undo-tree-id547 . -15) (undo-tree-id548 . -15) (undo-tree-id549 . -15) (undo-tree-id550 . -15) (undo-tree-id551 . -15) (undo-tree-id552 . -15) (undo-tree-id553 . -15) (undo-tree-id554 . -15) (undo-tree-id555 . -15) (undo-tree-id556 . -15) (undo-tree-id557 . -15) (undo-tree-id558 . -15) (t 25324 40802 699 62000)) nil (25324 40834 144172 606000) 0 nil])
([nil nil ((27 . 29) (t 25324 40834 977367 930000)) nil (25326 3163 738199 568000) 0 nil] [nil nil ((657 . 658) (t 25324 40809 597366 236000)) ((#("2" 0 1 (face font-lock-function-name-face fontified t)) . 657) (t 25324 40826 180700 676000)) (25324 40826 172785 233000) 0 nil])
([nil nil ((27 . 39)) nil (25326 3163 738188 558000) 0 nil])
nil
([nil nil ((#("tp" 0 2 (face font-lock-function-name-face fontified t)) . -840) (undo-tree-id0 . -2) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) 842 (831 . 842) (830 . 831) (t 25326 4963 0 0)) nil (25353 47904 67193 529000) 0 nil])
([nil nil ((840 . 841)) nil (25353 47904 67082 970000) 0 nil])
([nil nil ((#("function 
" 0 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 10 (fontified t)) . 831) (undo-tree-id53 . -8) (undo-tree-id54 . -9) (undo-tree-id55 . -9) (undo-tree-id56 . -9) (undo-tree-id57 . -9) (undo-tree-id58 . -9) (undo-tree-id59 . -9) (undo-tree-id60 . -9) (undo-tree-id61 . -9) (undo-tree-id62 . -9) (undo-tree-id63 . -9) (undo-tree-id64 . -9) (undo-tree-id65 . -9) (undo-tree-id66 . -9) (undo-tree-id67 . -9) (undo-tree-id68 . -9) (undo-tree-id69 . -9) (undo-tree-id70 . -9) (undo-tree-id71 . -9) (undo-tree-id72 . -9) (undo-tree-id73 . -9) (undo-tree-id74 . -9) (undo-tree-id75 . -9) (undo-tree-id76 . -9) (undo-tree-id77 . -9) (undo-tree-id78 . -9) (undo-tree-id79 . -9) (undo-tree-id80 . -9) (undo-tree-id81 . -9) (undo-tree-id82 . -9) (undo-tree-id83 . -9) (undo-tree-id84 . -9) (undo-tree-id85 . -9) (undo-tree-id86 . -9) (undo-tree-id87 . -9) (undo-tree-id88 . -9) (undo-tree-id89 . -9) (undo-tree-id90 . -9) (undo-tree-id91 . -9) (undo-tree-id92 . -9) (undo-tree-id93 . -9) (undo-tree-id94 . -9) (undo-tree-id95 . -9) (undo-tree-id96 . -9) (undo-tree-id97 . -9) (undo-tree-id98 . -9) (undo-tree-id99 . -9) (undo-tree-id100 . -9) (undo-tree-id101 . -9) (undo-tree-id102 . -9) (undo-tree-id103 . -9) (undo-tree-id104 . -9) (undo-tree-id105 . -8) (undo-tree-id106 . -8) (undo-tree-id107 . -8) (undo-tree-id108 . -8) (undo-tree-id109 . -8) (undo-tree-id110 . -8) (undo-tree-id111 . -8) (undo-tree-id112 . -8) (undo-tree-id113 . -8) (undo-tree-id114 . -8) (undo-tree-id115 . -8) (undo-tree-id116 . -8) (undo-tree-id117 . -8) (undo-tree-id118 . -8) (undo-tree-id119 . -8) (undo-tree-id120 . -8) (undo-tree-id121 . -8) (undo-tree-id122 . -8) (undo-tree-id123 . -8) (undo-tree-id124 . -8) (undo-tree-id125 . -8) (undo-tree-id126 . -8) (undo-tree-id127 . -8) (undo-tree-id128 . -8) (undo-tree-id129 . -8) (undo-tree-id130 . -8) (undo-tree-id131 . -8) (undo-tree-id132 . -8) (undo-tree-id133 . -8) (undo-tree-id134 . -10) (undo-tree-id135 . -8) (undo-tree-id136 . -8) (undo-tree-id137 . -8) (undo-tree-id138 . -8) (undo-tree-id139 . -8) (undo-tree-id140 . -8) (undo-tree-id141 . -8) (undo-tree-id142 . -8) (undo-tree-id143 . -8) (undo-tree-id144 . -8) (undo-tree-id145 . -8) (undo-tree-id146 . -8) (undo-tree-id147 . -8) (undo-tree-id148 . -8) (undo-tree-id149 . -8) (undo-tree-id150 . -8) (undo-tree-id151 . -8) (undo-tree-id152 . -8) (undo-tree-id153 . -8) (undo-tree-id154 . -8) (undo-tree-id155 . -8) (undo-tree-id156 . -8) (undo-tree-id157 . -8) (undo-tree-id158 . -8) (undo-tree-id159 . -8) (undo-tree-id160 . -8) (undo-tree-id161 . -8) (undo-tree-id162 . -8) 839 (t 25353 47899 0 0)) nil (25353 47905 207111 705000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1205 . 1206) (nil fontified nil 831 . 1206) (831 . 1206) (t 25353 47900 0 0)) nil (25353 47995 544325 317000) 0 nil])
([nil nil ((1206 . 1207)) nil (25353 47995 544314 3000) 0 nil])
([nil nil ((852 . 868) (t 25353 47991 0 0)) nil (25353 48032 326077 998000) 0 nil])
([nil nil ((871 . 887)) nil (25353 48032 326067 452000) 0 nil])
([nil nil ((911 . 912) (#("1" 0 1 (fontified t)) . 911) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (t 25353 48028 0 0)) nil (25353 48080 640025 518000) 0 nil])
([nil nil ((830 . 832) (t 25353 48054 0 0)) nil (25353 48085 917857 516000) 0 nil] [nil nil ((#("function tp_fp_rate(J::AbstractMatrix, Z::AbstractMatrix, i, j, q; J_thresh = 0.5)
    edges_true = reshape(abs.(J) .> J_thresh, :, size(X, 2), size(X, 2))[:, i, j]
    edges_infer = reshape(Z .> q * maximum(Z), :, size(X, 2), size(X, 2))[:, i, j]
    tp_rate = sum(edges_true .& edges_infer)/sum(edges_true)
    fp_rate = sum(.!edges_true .& edges_infer)/sum(.!edges_true)
    return [tp_rate, fp_rate]
end
" 0 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 19 (face font-lock-function-name-face fontified t) 19 23 (fontified t) 23 37 (face font-lock-type-face fontified t) 37 42 (fontified t) 42 56 (face font-lock-type-face fontified t) 56 83 (fontified t) 83 378 (fontified t) 378 384 (face font-lock-keyword-face fontified t) 384 404 (fontified t) 404 406 (face font-lock-keyword-face fontified t) 406 407 (face font-lock-keyword-face fontified t rear-nonsticky t) 407 408 (fontified t)) . 831) (undo-tree-id238 . -408) (undo-tree-id239 . 327) (undo-tree-id240 . -80) (undo-tree-id241 . -408) (undo-tree-id242 . -406) (undo-tree-id243 . -80) (undo-tree-id244 . -80) (undo-tree-id245 . -80) (undo-tree-id246 . -80) (undo-tree-id247 . -80) (undo-tree-id248 . -80) (undo-tree-id249 . -80) (undo-tree-id250 . -80) (undo-tree-id251 . -80) (undo-tree-id252 . -80) (undo-tree-id253 . -80) (undo-tree-id254 . -80) (undo-tree-id255 . -80) (undo-tree-id256 . -80) (undo-tree-id257 . -80) (undo-tree-id258 . -80) (undo-tree-id259 . -80) (undo-tree-id260 . -80) (undo-tree-id261 . -80) (undo-tree-id262 . -80) (undo-tree-id263 . -80) (undo-tree-id264 . -80) (undo-tree-id265 . -80) (undo-tree-id266 . -80) (undo-tree-id267 . -80) (undo-tree-id268 . -80) (undo-tree-id269 . -80) (undo-tree-id270 . -80) (undo-tree-id271 . -80) (undo-tree-id272 . -80) (undo-tree-id273 . -80) (undo-tree-id274 . -80) (undo-tree-id275 . -80) (undo-tree-id276 . -80) (undo-tree-id277 . -80) (undo-tree-id278 . -80) (undo-tree-id279 . -80) (undo-tree-id280 . -80) (undo-tree-id281 . -80) (undo-tree-id282 . -80) (undo-tree-id283 . -80) (undo-tree-id284 . -80) (undo-tree-id285 . -80) (undo-tree-id286 . -80) (undo-tree-id287 . -80) (undo-tree-id288 . -80) (undo-tree-id289 . -80) (undo-tree-id290 . -80) (undo-tree-id291 . -80) (undo-tree-id292 . -80) (undo-tree-id293 . -80) (undo-tree-id294 . -80) (undo-tree-id295 . -80) (undo-tree-id296 . -80) (undo-tree-id297 . -80) (undo-tree-id298 . -80) (undo-tree-id299 . -80) (undo-tree-id300 . -80) (undo-tree-id301 . -80) (undo-tree-id302 . -80) (undo-tree-id303 . -80) (undo-tree-id304 . -80) (undo-tree-id305 . -80) (undo-tree-id306 . -80) (undo-tree-id307 . -80) (undo-tree-id308 . -80) (undo-tree-id309 . -80) (undo-tree-id310 . -80) (undo-tree-id311 . -80) (undo-tree-id312 . -80) (undo-tree-id313 . -80) (undo-tree-id314 . -80) (undo-tree-id315 . -80) (undo-tree-id316 . -80) (undo-tree-id317 . -80) (undo-tree-id318 . -80) (undo-tree-id319 . -408) (undo-tree-id320 . -80) (undo-tree-id321 . -80) (undo-tree-id322 . -80) (undo-tree-id323 . -80) (undo-tree-id324 . -80) (undo-tree-id325 . -80) (undo-tree-id326 . -80) (undo-tree-id327 . -80) (undo-tree-id328 . -80) (undo-tree-id329 . -80) (undo-tree-id330 . -80) (undo-tree-id331 . -80) (undo-tree-id332 . -80) (undo-tree-id333 . -80) (undo-tree-id334 . -80) (undo-tree-id335 . -80) (undo-tree-id336 . -80) (undo-tree-id337 . -80) (undo-tree-id338 . -80) (undo-tree-id339 . -80) (undo-tree-id340 . -80) (undo-tree-id341 . -80) (undo-tree-id342 . -80) (undo-tree-id343 . -80) (undo-tree-id344 . -80) (undo-tree-id345 . -80) (undo-tree-id346 . -80) (undo-tree-id347 . -80) (undo-tree-id348 . -80) (undo-tree-id349 . -80) (undo-tree-id350 . -80) (undo-tree-id351 . -80) (undo-tree-id352 . -80) (undo-tree-id353 . -80) (undo-tree-id354 . -80) (undo-tree-id355 . -80) (undo-tree-id356 . -80) (undo-tree-id357 . -80) (undo-tree-id358 . -80) (undo-tree-id359 . -80) (undo-tree-id360 . -80) (undo-tree-id361 . -80) (undo-tree-id362 . -80) (undo-tree-id363 . -80) (undo-tree-id364 . -80) (undo-tree-id365 . -80) (undo-tree-id366 . -80) (undo-tree-id367 . -80) (undo-tree-id368 . -80) (undo-tree-id369 . -80) (undo-tree-id370 . -137) (undo-tree-id371 . -138) (undo-tree-id372 . -149) (undo-tree-id373 . -150) (undo-tree-id374 . -220) (undo-tree-id375 . -221) (undo-tree-id376 . -232) (undo-tree-id377 . -233) (undo-tree-id378 . -80) (undo-tree-id379 . -80) (undo-tree-id380 . -80) (undo-tree-id381 . -80) (undo-tree-id382 . -80) (undo-tree-id383 . -80) (undo-tree-id384 . -80) (undo-tree-id385 . -80) (undo-tree-id386 . -80) (undo-tree-id387 . -80) (undo-tree-id388 . -80) (undo-tree-id389 . -80) (undo-tree-id390 . -80) (undo-tree-id391 . -80) (undo-tree-id392 . -80) (undo-tree-id393 . -80) (undo-tree-id394 . -80) (undo-tree-id395 . -80) (undo-tree-id396 . -80) (undo-tree-id397 . -80) (undo-tree-id398 . -80) (undo-tree-id399 . -80) (undo-tree-id400 . -80) (undo-tree-id401 . -80) (undo-tree-id402 . -80) (undo-tree-id403 . -163) (undo-tree-id404 . -163) (undo-tree-id405 . -163) (undo-tree-id406 . -163) (undo-tree-id407 . -163) (undo-tree-id408 . -163) (undo-tree-id409 . -163) (undo-tree-id410 . -163) (undo-tree-id411 . -163) (undo-tree-id412 . -163) (undo-tree-id413 . -163) (undo-tree-id414 . -163) (undo-tree-id415 . -163) (undo-tree-id416 . -163) (undo-tree-id417 . -163) (undo-tree-id418 . -163) (undo-tree-id419 . -163) (undo-tree-id420 . -163) (undo-tree-id421 . -163) (undo-tree-id422 . -163) (undo-tree-id423 . -163) (undo-tree-id424 . -163) (undo-tree-id425 . -163) (undo-tree-id426 . -163) (undo-tree-id427 . -163) (undo-tree-id428 . -163) (undo-tree-id429 . -163) (undo-tree-id430 . -163) (undo-tree-id431 . -163) (undo-tree-id432 . -163) (undo-tree-id433 . -163) (undo-tree-id434 . -163) (undo-tree-id435 . -163) (undo-tree-id436 . -163) (undo-tree-id437 . -163) (undo-tree-id438 . -163) (undo-tree-id439 . -163) (undo-tree-id440 . -163) (undo-tree-id441 . -163) (undo-tree-id442 . -163) (undo-tree-id443 . -163) (undo-tree-id444 . -163) (undo-tree-id445 . -163) (undo-tree-id446 . -163) (undo-tree-id447 . -163) (undo-tree-id448 . -163) (undo-tree-id449 . -163) (undo-tree-id450 . -163) (undo-tree-id451 . -163) (undo-tree-id452 . -163) (undo-tree-id453 . -245) (undo-tree-id454 . -245) (undo-tree-id455 . -245) (undo-tree-id456 . -245) (undo-tree-id457 . -245) (undo-tree-id458 . -245) (undo-tree-id459 . -245) (undo-tree-id460 . -245) (undo-tree-id461 . -245) (undo-tree-id462 . -245) (undo-tree-id463 . -245) (undo-tree-id464 . -245) (undo-tree-id465 . -245) (undo-tree-id466 . -245) (undo-tree-id467 . -245) (undo-tree-id468 . -245) (undo-tree-id469 . -245) (undo-tree-id470 . -245) (undo-tree-id471 . -245) (undo-tree-id472 . -245) (undo-tree-id473 . -245) (undo-tree-id474 . -245) (undo-tree-id475 . -245) (undo-tree-id476 . -245) (undo-tree-id477 . -245) (undo-tree-id478 . -245) (undo-tree-id479 . -245) (undo-tree-id480 . -245) (undo-tree-id481 . -245) (undo-tree-id482 . -245) (undo-tree-id483 . -245) (undo-tree-id484 . -245) (undo-tree-id485 . -245) (undo-tree-id486 . -245) (undo-tree-id487 . -245) (undo-tree-id488 . -245) (undo-tree-id489 . -245) (undo-tree-id490 . -245) (undo-tree-id491 . -245) (undo-tree-id492 . -245) (undo-tree-id493 . -245) (undo-tree-id494 . -245) (undo-tree-id495 . -245) (undo-tree-id496 . -245) (undo-tree-id497 . -245) (undo-tree-id498 . -245) (undo-tree-id499 . -245) (undo-tree-id500 . -245) (undo-tree-id501 . -245) (undo-tree-id502 . -245) (undo-tree-id503 . -163) (undo-tree-id504 . -163) (undo-tree-id505 . -163) (undo-tree-id506 . -163) (undo-tree-id507 . -163) (undo-tree-id508 . -163) (undo-tree-id509 . -163) (undo-tree-id510 . -163) (undo-tree-id511 . -163) (undo-tree-id512 . -163) (undo-tree-id513 . -163) (undo-tree-id514 . -163) (undo-tree-id515 . -163) (undo-tree-id516 . -163) (undo-tree-id517 . -163) (undo-tree-id518 . -163) (undo-tree-id519 . -163) (undo-tree-id520 . -163) (undo-tree-id521 . -163) (undo-tree-id522 . -163) (undo-tree-id523 . -163) (undo-tree-id524 . -163) (undo-tree-id525 . -163) (undo-tree-id526 . -163) (undo-tree-id527 . -163) (undo-tree-id528 . -80) (undo-tree-id529 . -80) (undo-tree-id530 . -80) (undo-tree-id531 . -80) (undo-tree-id532 . -80) (undo-tree-id533 . -80) (undo-tree-id534 . -80) (undo-tree-id535 . -80) (undo-tree-id536 . -80) (undo-tree-id537 . -80) (undo-tree-id538 . -80) (undo-tree-id539 . -80) (undo-tree-id540 . -80) (undo-tree-id541 . -80) (undo-tree-id542 . -80) (undo-tree-id543 . -80) (undo-tree-id544 . -80) (undo-tree-id545 . -80) (undo-tree-id546 . -80) (undo-tree-id547 . -80) (undo-tree-id548 . -80) (undo-tree-id549 . -80) (undo-tree-id550 . -80) (undo-tree-id551 . -80) (undo-tree-id552 . -80) (undo-tree-id553 . -80) (undo-tree-id554 . -80) (undo-tree-id555 . -80) (undo-tree-id556 . -80) (undo-tree-id557 . -80) (undo-tree-id558 . -80) (undo-tree-id559 . -80) (undo-tree-id560 . -80) (undo-tree-id561 . -80) (undo-tree-id562 . -80) (undo-tree-id563 . -80) (undo-tree-id564 . -80) (undo-tree-id565 . -80) (undo-tree-id566 . -80) (undo-tree-id567 . -80) (undo-tree-id568 . -80) (undo-tree-id569 . -80) (undo-tree-id570 . -80) (undo-tree-id571 . -80) (undo-tree-id572 . -80) (undo-tree-id573 . -80) (undo-tree-id574 . -80) (undo-tree-id575 . -80) (undo-tree-id576 . -80) (undo-tree-id577 . -80) (undo-tree-id578 . -163) (undo-tree-id579 . -163) (undo-tree-id580 . -163) (undo-tree-id581 . -163) (undo-tree-id582 . -163) (undo-tree-id583 . -163) (undo-tree-id584 . -163) (undo-tree-id585 . -163) (undo-tree-id586 . -163) (undo-tree-id587 . -163) (undo-tree-id588 . -163) (undo-tree-id589 . -163) (undo-tree-id590 . -163) (undo-tree-id591 . -163) (undo-tree-id592 . -163) (undo-tree-id593 . -163) (undo-tree-id594 . -163) (undo-tree-id595 . -163) (undo-tree-id596 . -163) (undo-tree-id597 . -163) (undo-tree-id598 . -163) (undo-tree-id599 . -163) (undo-tree-id600 . -163) (undo-tree-id601 . -163) (undo-tree-id602 . -163) (undo-tree-id603 . -163) (undo-tree-id604 . -163) (undo-tree-id605 . -163) (undo-tree-id606 . -163) (undo-tree-id607 . -163) (undo-tree-id608 . -163) (undo-tree-id609 . -163) (undo-tree-id610 . -163) (undo-tree-id611 . -163) (undo-tree-id612 . -163) (undo-tree-id613 . -163) (undo-tree-id614 . -163) (undo-tree-id615 . -163) (undo-tree-id616 . -163) (undo-tree-id617 . -163) (undo-tree-id618 . -163) (undo-tree-id619 . -163) (undo-tree-id620 . -163) (undo-tree-id621 . -163) (undo-tree-id622 . -163) (undo-tree-id623 . -163) (undo-tree-id624 . -163) (undo-tree-id625 . -163) (undo-tree-id626 . -163) (undo-tree-id627 . -163) (undo-tree-id628 . -80) (undo-tree-id629 . -80) (undo-tree-id630 . -80) (undo-tree-id631 . -80) (undo-tree-id632 . -80) (undo-tree-id633 . -80) (undo-tree-id634 . -80) (undo-tree-id635 . -80) (undo-tree-id636 . -80) (undo-tree-id637 . -80) (undo-tree-id638 . -80) (undo-tree-id639 . -80) (undo-tree-id640 . -80) (undo-tree-id641 . -80) (undo-tree-id642 . -80) (undo-tree-id643 . -80) (undo-tree-id644 . -80) (undo-tree-id645 . -80) (undo-tree-id646 . -80) (undo-tree-id647 . -80) (undo-tree-id648 . -80) (undo-tree-id649 . -80) (undo-tree-id650 . -80) (undo-tree-id651 . -80) (undo-tree-id652 . -80) (undo-tree-id653 . -80) (undo-tree-id654 . -80) (undo-tree-id655 . -80) (undo-tree-id656 . -80) (undo-tree-id657 . -80) (undo-tree-id658 . -80) (undo-tree-id659 . -80) (undo-tree-id660 . -80) (undo-tree-id661 . -80) (undo-tree-id662 . -80) (undo-tree-id663 . -80) (undo-tree-id664 . -80) (undo-tree-id665 . -80) (undo-tree-id666 . -80) (undo-tree-id667 . -80) (undo-tree-id668 . -80) (undo-tree-id669 . -80) (undo-tree-id670 . -80) (undo-tree-id671 . -80) (undo-tree-id672 . -80) (undo-tree-id673 . -80) (undo-tree-id674 . -80) (undo-tree-id675 . -80) (undo-tree-id676 . -80) (undo-tree-id677 . -80) (undo-tree-id678 . -408) (undo-tree-id679 . -80) (undo-tree-id680 . -408) (undo-tree-id681 . -80) (undo-tree-id682 . -80) (undo-tree-id683 . -80) (undo-tree-id684 . -80) (undo-tree-id685 . -80) (undo-tree-id686 . -80) (undo-tree-id687 . -80) (undo-tree-id688 . -80) (undo-tree-id689 . -80) (undo-tree-id690 . -80) (undo-tree-id691 . -80) (undo-tree-id692 . -80) (undo-tree-id693 . -80) (undo-tree-id694 . -80) (undo-tree-id695 . -80) (undo-tree-id696 . -80) (undo-tree-id697 . -80) (undo-tree-id698 . -80) (undo-tree-id699 . -80) (undo-tree-id700 . -80) (undo-tree-id701 . -80) (undo-tree-id702 . -80) (undo-tree-id703 . -80) (undo-tree-id704 . -80) (undo-tree-id705 . -80) (undo-tree-id706 . -80) (undo-tree-id707 . -408) (undo-tree-id708 . -408) (undo-tree-id709 . -408) (undo-tree-id710 . -408) (undo-tree-id711 . -408) (undo-tree-id712 . -408) (undo-tree-id713 . -408) (undo-tree-id714 . -408) (undo-tree-id715 . -408) (undo-tree-id716 . -408) (undo-tree-id717 . -408) (undo-tree-id718 . -408) (undo-tree-id719 . -408) (undo-tree-id720 . -408) (undo-tree-id721 . -408) (undo-tree-id722 . -408) (undo-tree-id723 . -408) (undo-tree-id724 . -408) (undo-tree-id725 . -408) (undo-tree-id726 . -408) (undo-tree-id727 . -408) (undo-tree-id728 . -408) (undo-tree-id729 . -408) (undo-tree-id730 . -408) (undo-tree-id731 . -408) (undo-tree-id732 . -408) (undo-tree-id733 . -408) 1239 (t 25353 48054 0 0)) ((831 . 1239)) (25353 48080 627939 204000) 0 nil])
([nil nil ((nil rear-nonsticky nil 831 . 832) (#("
" 0 1 (fontified nil)) . -1162) (831 . 1163)) nil (25353 48085 917852 697000) 0 nil])
nil
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 831) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1)) nil (25353 48085 917842 360000) 0 nil])
([nil nil ((840 . 845) (#("prec" 0 4 (face font-lock-function-name-face fontified t)) . -840) (undo-tree-id762 . -4) (undo-tree-id763 . -4) (undo-tree-id764 . -4) (undo-tree-id765 . -4) (undo-tree-id766 . -4) (undo-tree-id767 . -4) (undo-tree-id768 . -4) (undo-tree-id769 . -4) (undo-tree-id770 . -4) (undo-tree-id771 . -4) (undo-tree-id772 . -4) (undo-tree-id773 . -4) (undo-tree-id774 . -4) (undo-tree-id775 . -4) (undo-tree-id776 . -4) (undo-tree-id777 . -4) (undo-tree-id778 . -4) (undo-tree-id779 . -4) (undo-tree-id780 . -4) (undo-tree-id781 . -4) (undo-tree-id782 . -4) (undo-tree-id783 . -4) (undo-tree-id784 . -4) (undo-tree-id785 . -4) (undo-tree-id786 . -4) (undo-tree-id787 . -4) (undo-tree-id788 . -4) (undo-tree-id789 . -4) (undo-tree-id790 . -4) (undo-tree-id791 . -4) (undo-tree-id792 . -4) (undo-tree-id793 . -4) (undo-tree-id794 . -4) (undo-tree-id795 . -4) (undo-tree-id796 . -4) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (undo-tree-id799 . -4) (undo-tree-id800 . -4) (undo-tree-id801 . -4) (undo-tree-id802 . -4) (undo-tree-id803 . -4) (undo-tree-id804 . -4) (undo-tree-id805 . -4) (undo-tree-id806 . -4) (undo-tree-id807 . -4) (undo-tree-id808 . -4) (undo-tree-id809 . -4) (undo-tree-id810 . -4) (undo-tree-id811 . -4) (undo-tree-id812 . -4) (undo-tree-id813 . -4) (undo-tree-id814 . -4) (undo-tree-id815 . -4) (undo-tree-id816 . -4) (undo-tree-id817 . -4) (undo-tree-id818 . -4) (undo-tree-id819 . -4) (undo-tree-id820 . -4) (undo-tree-id821 . -4) (undo-tree-id822 . -4) (undo-tree-id823 . -4) (undo-tree-id824 . -4) (undo-tree-id825 . -4) (undo-tree-id826 . -4) (undo-tree-id827 . -4) (undo-tree-id828 . -4) (undo-tree-id829 . -4) (undo-tree-id830 . -4) (undo-tree-id831 . -4) (undo-tree-id832 . -4) (undo-tree-id833 . -4) (undo-tree-id834 . -4) (undo-tree-id835 . -4) (undo-tree-id836 . -4) (undo-tree-id837 . -4) (undo-tree-id838 . -4) (undo-tree-id839 . -4) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (undo-tree-id842 . -4) (undo-tree-id843 . -4) (undo-tree-id844 . -4) (undo-tree-id845 . -4) (undo-tree-id846 . -4) (undo-tree-id847 . -4) (undo-tree-id848 . -4) (undo-tree-id849 . -4) (undo-tree-id850 . -4) (undo-tree-id851 . -4) (undo-tree-id852 . -4) (undo-tree-id853 . -4) (undo-tree-id854 . -4) (undo-tree-id855 . -4) (undo-tree-id856 . -4) (undo-tree-id857 . -4) (undo-tree-id858 . -4) (undo-tree-id859 . -4) (undo-tree-id860 . -4) (undo-tree-id861 . -4) (undo-tree-id862 . -4) (undo-tree-id863 . -4) (undo-tree-id864 . -4) (undo-tree-id865 . -4) 844 (#("_" 0 1 (face font-lock-function-name-face fontified t)) . -844) (undo-tree-id866 . -1) (undo-tree-id867 . -1) (undo-tree-id868 . -1) (undo-tree-id869 . -1) (undo-tree-id870 . -1) (undo-tree-id871 . -1) (undo-tree-id872 . -1) (undo-tree-id873 . -1) (undo-tree-id874 . -1) (undo-tree-id875 . -1) (undo-tree-id876 . -1) (undo-tree-id877 . -1) (undo-tree-id878 . -1) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) 845 (#("rec" 0 3 (face font-lock-function-name-face fontified t)) . -845) (undo-tree-id944 . -3) (undo-tree-id945 . -3) (undo-tree-id946 . -3) (undo-tree-id947 . -3) (undo-tree-id948 . -3) (undo-tree-id949 . -3) (undo-tree-id950 . -3) (undo-tree-id951 . -3) (undo-tree-id952 . -3) (undo-tree-id953 . -3) (undo-tree-id954 . -3) (undo-tree-id955 . -3) (undo-tree-id956 . -3) (undo-tree-id957 . -3) (undo-tree-id958 . -3) (undo-tree-id959 . -3) (undo-tree-id960 . -3) (undo-tree-id961 . -3) (undo-tree-id962 . -3) (undo-tree-id963 . -3) (undo-tree-id964 . -3) (undo-tree-id965 . -3) (undo-tree-id966 . -3) (undo-tree-id967 . -3) (undo-tree-id968 . -3) (undo-tree-id969 . -3) (undo-tree-id970 . -3) (undo-tree-id971 . -3) (undo-tree-id972 . -3) (undo-tree-id973 . -3) (undo-tree-id974 . -3) (undo-tree-id975 . -3) (undo-tree-id976 . -3) (undo-tree-id977 . -3) (undo-tree-id978 . -3) (undo-tree-id979 . -3) (undo-tree-id980 . -3) (undo-tree-id981 . -3) (undo-tree-id982 . -3) (undo-tree-id983 . -3) (undo-tree-id984 . -3) (undo-tree-id985 . -3) (undo-tree-id986 . -3) (undo-tree-id987 . -3) (undo-tree-id988 . -3) (undo-tree-id989 . -3) (undo-tree-id990 . -3) (undo-tree-id991 . -3) (undo-tree-id992 . -3) (undo-tree-id993 . -3) (undo-tree-id994 . -3) (undo-tree-id995 . -3) 848 (t 25353 48081 0 0)) nil (25353 48122 36173 646000) 0 nil])
([nil nil ((#("function tp_fp_rate(J::AbstractMatrix, Z::AbstractMatrix, i, j, q; J_thresh = 0.5)
    edges_true = reshape(abs.(J) .> J_thresh, :, size(X, 2), size(X, 2))[:, i, j]
    edges_infer = reshape(Z .> q * maximum(Z), :, size(X, 2), size(X, 2))[:, i, j]
    tp_rate = sum(edges_true .& edges_infer)/sum(edges_true)
    fp_rate = sum(.!edges_true .& edges_infer)/sum(.!edges_true)
    return [tp_rate, fp_rate]
end
" 0 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 19 (face font-lock-function-name-face fontified t) 19 23 (fontified t) 23 37 (face font-lock-type-face fontified t) 37 42 (fontified t) 42 56 (face font-lock-type-face fontified t) 56 83 (fontified t) 83 378 (fontified t) 378 384 (face font-lock-keyword-face fontified t) 384 404 (fontified t) 404 406 (face font-lock-keyword-face fontified t) 406 407 (face font-lock-keyword-face fontified t rear-nonsticky t) 407 408 (fontified t)) . 1160) (undo-tree-id996 . -408) (undo-tree-id997 . -17) (undo-tree-id998 . -408) (undo-tree-id999 . -406) (undo-tree-id1000 . -80) (undo-tree-id1001 . -408) (undo-tree-id1002 . -408) (undo-tree-id1003 . -408) (undo-tree-id1004 . -137) (undo-tree-id1005 . -138) (undo-tree-id1006 . -149) (undo-tree-id1007 . -150) (undo-tree-id1008 . -220) (undo-tree-id1009 . -221) (undo-tree-id1010 . -232) (undo-tree-id1011 . -233) (undo-tree-id1012 . -408) (undo-tree-id1013 . -408) (undo-tree-id1014 . -17) (undo-tree-id1015 . -408) (undo-tree-id1016 . -17) (undo-tree-id1017 . -408) (undo-tree-id1018 . -408) (undo-tree-id1019 . -408) (undo-tree-id1020 . -408) (undo-tree-id1021 . -408) (undo-tree-id1022 . -408) (undo-tree-id1023 . -408) (undo-tree-id1024 . -408) (undo-tree-id1025 . -408) (undo-tree-id1026 . -408) (undo-tree-id1027 . -408) (undo-tree-id1028 . -408) (undo-tree-id1029 . -408) (undo-tree-id1030 . -408) (undo-tree-id1031 . -408) (undo-tree-id1032 . -408) (undo-tree-id1033 . -408) (undo-tree-id1034 . -408) (undo-tree-id1035 . -408) (undo-tree-id1036 . -408) (undo-tree-id1037 . -408) (undo-tree-id1038 . -408) (undo-tree-id1039 . -408) (undo-tree-id1040 . -408) (undo-tree-id1041 . -408) (undo-tree-id1042 . -408) (undo-tree-id1043 . -408) 1568 (t 25353 48117 0 0)) nil (25353 48317 240345 977000) 0 nil])
([nil nil ((1139 . 1140) (#("p" 0 1 (fontified t)) . 1139)) nil (25353 48323 866389 544000) 0 nil] [nil nil ((#("    fn = sum(edges_true .& .!edges_infer)
" 0 42 (fontified t)) . 1077) (undo-tree-id1044 . -42) (undo-tree-id1045 . -42) (undo-tree-id1046 . -42) (undo-tree-id1047 . -42) (undo-tree-id1048 . -42) (undo-tree-id1049 . -42) (undo-tree-id1050 . -42) (undo-tree-id1051 . -42) (undo-tree-id1052 . -42) (undo-tree-id1053 . -42) (undo-tree-id1054 . -42) (undo-tree-id1055 . -42) (undo-tree-id1056 . -42) (undo-tree-id1057 . -42) (undo-tree-id1058 . -42) (undo-tree-id1059 . -42) (undo-tree-id1060 . -42) (undo-tree-id1061 . -42) (undo-tree-id1062 . -42) (undo-tree-id1063 . -42) (undo-tree-id1064 . -42) (undo-tree-id1065 . -42) (undo-tree-id1066 . -42) (undo-tree-id1067 . -42) (undo-tree-id1068 . -42) (undo-tree-id1069 . -42) (t 25353 48264 0 0)) ((1077 . 1119) (t 25353 48267 0 0)) (25353 48271 767684 785000) 0 nil])
([nil nil ((1143 . 1144) (#("t" 0 1 (fontified t)) . 1143) (t 25353 48319 0 0)) nil (25353 48337 667965 494000) 0 nil])
nil
([nil nil ((1143 . 1144) (#("p" 0 1 (fontified t)) . 1143) (t 25353 48333 0 0)) nil (25353 48340 145916 641000) 0 nil])
([nil nil ((1147 . 1148) (#("t" 0 1 (fontified t)) . 1147) (t 25353 48335 0 0)) nil (25353 48360 673947 952000) 0 nil])
([nil nil ((1150 . 1151) (#("f" 0 1 (fontified t)) . 1150) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1)) nil (25353 48360 673933 215000) 0 nil])
([nil nil ((1123 . 1142) (1118 . 1123) (t 25353 48356 0 0)) nil (25353 48375 976228 750000) 0 nil])
([nil nil ((1132 . 1134)) nil (25353 48375 976217 646000) 0 nil])
([nil nil ((1144 . 1160) (t 25353 48371 0 0)) nil (25353 48380 5783 49000) 0 nil])
([nil nil ((1148 . 1150) (t 25353 48375 0 0)) nil (25353 48382 131668 814000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1204 . 1205) (#("
" 0 1 (fontified nil)) . -1385) (1204 . 1386) (t 25353 48377 0 0)) nil (25353 48421 29426 324000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 1204) (undo-tree-id1145 . -1) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) (undo-tree-id1149 . -1) (undo-tree-id1150 . -1) (undo-tree-id1151 . -1) (undo-tree-id1152 . -1) (undo-tree-id1153 . -1) (undo-tree-id1154 . -1) (undo-tree-id1155 . -1) (undo-tree-id1156 . -1) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) (undo-tree-id1161 . -1) (undo-tree-id1162 . -1) (undo-tree-id1163 . -1) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1)) nil (25353 48421 29417 594000) 0 nil])
([nil nil ((1384 . 1385)) nil (25353 48421 29331 899000) 0 nil])
([nil nil ((1213 . 1218) (#("prec" 0 4 (face font-lock-function-name-face fontified t)) . -1213) (undo-tree-id1198 . -4) (undo-tree-id1199 . -4) (undo-tree-id1200 . -3) (undo-tree-id1201 . -3) (undo-tree-id1202 . -3) (undo-tree-id1203 . -3) (undo-tree-id1204 . -3) (undo-tree-id1205 . -3) (undo-tree-id1206 . -3) (undo-tree-id1207 . -3) (undo-tree-id1208 . -3) (undo-tree-id1209 . -3) (undo-tree-id1210 . -3) (undo-tree-id1211 . -3) (undo-tree-id1212 . -3) (undo-tree-id1213 . -3) (undo-tree-id1214 . -3) (undo-tree-id1215 . -3) (undo-tree-id1216 . -3) (undo-tree-id1217 . -3) (undo-tree-id1218 . -3) (undo-tree-id1219 . -3) (undo-tree-id1220 . -3) (undo-tree-id1221 . -3) (undo-tree-id1222 . -3) (undo-tree-id1223 . -3) (undo-tree-id1224 . -3) (undo-tree-id1225 . -4) (undo-tree-id1226 . -4) (undo-tree-id1227 . -4) (undo-tree-id1228 . -4) (undo-tree-id1229 . -4) (undo-tree-id1230 . -4) (undo-tree-id1231 . -4) (undo-tree-id1232 . -4) (undo-tree-id1233 . -4) (undo-tree-id1234 . -4) (undo-tree-id1235 . -4) (undo-tree-id1236 . -4) (undo-tree-id1237 . -4) (undo-tree-id1238 . -4) (undo-tree-id1239 . -4) (undo-tree-id1240 . -4) (undo-tree-id1241 . -4) (undo-tree-id1242 . -4) (undo-tree-id1243 . -4) (undo-tree-id1244 . -4) (undo-tree-id1245 . -4) (undo-tree-id1246 . -4) (undo-tree-id1247 . -4) (undo-tree-id1248 . -4) (undo-tree-id1249 . -4) (undo-tree-id1250 . -4) (undo-tree-id1251 . -4) (undo-tree-id1252 . -4) (undo-tree-id1253 . -4) (undo-tree-id1254 . -4) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4) (undo-tree-id1257 . -4) (undo-tree-id1258 . -4) (undo-tree-id1259 . -4) (undo-tree-id1260 . -4) (undo-tree-id1261 . -4) (undo-tree-id1262 . -4) (undo-tree-id1263 . -4) (undo-tree-id1264 . -4) (undo-tree-id1265 . -4) (undo-tree-id1266 . -4) (undo-tree-id1267 . -4) (undo-tree-id1268 . -4) (undo-tree-id1269 . -4) (undo-tree-id1270 . -4) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) (undo-tree-id1276 . -4) (undo-tree-id1277 . -4) (undo-tree-id1278 . -4) (undo-tree-id1279 . -4) (undo-tree-id1280 . -4) (undo-tree-id1281 . -4) (undo-tree-id1282 . -4) (undo-tree-id1283 . -4) (undo-tree-id1284 . -4) (undo-tree-id1285 . -4) (undo-tree-id1286 . -4) (undo-tree-id1287 . -4) (undo-tree-id1288 . -4) (undo-tree-id1289 . -4) (undo-tree-id1290 . -4) (undo-tree-id1291 . -4) (undo-tree-id1292 . -4) (undo-tree-id1293 . -4) (undo-tree-id1294 . -4) (undo-tree-id1295 . -4) (undo-tree-id1296 . -4) (undo-tree-id1297 . -4) (undo-tree-id1298 . -4) (undo-tree-id1299 . -4) (undo-tree-id1300 . -4) (undo-tree-id1301 . -4) (undo-tree-id1302 . -4) (undo-tree-id1303 . -4) (undo-tree-id1304 . -4) (undo-tree-id1305 . -4) (undo-tree-id1306 . -4) (undo-tree-id1307 . -4) (undo-tree-id1308 . -4) (undo-tree-id1309 . -4) (undo-tree-id1310 . -4) (undo-tree-id1311 . -4) (undo-tree-id1312 . -4) (undo-tree-id1313 . -4) (undo-tree-id1314 . -4) (undo-tree-id1315 . -4) (undo-tree-id1316 . -4) (undo-tree-id1317 . -4) (undo-tree-id1318 . -4) (undo-tree-id1319 . -4) (undo-tree-id1320 . -4) (undo-tree-id1321 . -4) (undo-tree-id1322 . -4) (undo-tree-id1323 . -4) (undo-tree-id1324 . -4) (undo-tree-id1325 . -4) (undo-tree-id1326 . -4) (undo-tree-id1327 . -4) (undo-tree-id1328 . -4) (undo-tree-id1329 . -4) (undo-tree-id1330 . -4) (undo-tree-id1331 . -4) (undo-tree-id1332 . -4) (undo-tree-id1333 . -4) (undo-tree-id1334 . -4) (undo-tree-id1335 . -4) (undo-tree-id1336 . -4) (undo-tree-id1337 . -4) (undo-tree-id1338 . -4) (undo-tree-id1339 . -4) (undo-tree-id1340 . -4) (undo-tree-id1341 . -4) (undo-tree-id1342 . -4) (undo-tree-id1343 . -4) (undo-tree-id1344 . -4) (undo-tree-id1345 . -4) (undo-tree-id1346 . -4) (undo-tree-id1347 . -4) (undo-tree-id1348 . -4) (undo-tree-id1349 . -4) (undo-tree-id1350 . -4) (undo-tree-id1351 . -4) (undo-tree-id1352 . -4) (undo-tree-id1353 . -4) (undo-tree-id1354 . -4) (undo-tree-id1355 . -4) (undo-tree-id1356 . -4) (undo-tree-id1357 . -4) (undo-tree-id1358 . -4) (undo-tree-id1359 . -4) (undo-tree-id1360 . -4) (undo-tree-id1361 . -4) (undo-tree-id1362 . -4) (undo-tree-id1363 . -4) (undo-tree-id1364 . -4) (undo-tree-id1365 . -4) (undo-tree-id1366 . -4) (undo-tree-id1367 . -4) (undo-tree-id1368 . -4) (undo-tree-id1369 . -4) (undo-tree-id1370 . -4) (undo-tree-id1371 . -4) (undo-tree-id1372 . -4) (undo-tree-id1373 . -4) (undo-tree-id1374 . -4) (undo-tree-id1375 . -4) (undo-tree-id1376 . -4) (undo-tree-id1377 . -4) (undo-tree-id1378 . -4) (undo-tree-id1379 . -4) (undo-tree-id1380 . -4) (undo-tree-id1381 . -4) (undo-tree-id1382 . -4) (undo-tree-id1383 . -4) (undo-tree-id1384 . -4) (undo-tree-id1385 . -4) (undo-tree-id1386 . -4) (undo-tree-id1387 . -4) (undo-tree-id1388 . -4) (undo-tree-id1389 . -4) (undo-tree-id1390 . -4) (undo-tree-id1391 . -4) (undo-tree-id1392 . -4) (undo-tree-id1393 . -4) (undo-tree-id1394 . -4) (undo-tree-id1395 . -4) (undo-tree-id1396 . -4) (undo-tree-id1397 . -4) (undo-tree-id1398 . -4) (undo-tree-id1399 . -4) (undo-tree-id1400 . -4) (undo-tree-id1401 . -4) (undo-tree-id1402 . -4) (undo-tree-id1403 . -4) (undo-tree-id1404 . -4) (undo-tree-id1405 . -4) (undo-tree-id1406 . -4) (undo-tree-id1407 . -4) (undo-tree-id1408 . -4) (undo-tree-id1409 . -4) (undo-tree-id1410 . -4) (undo-tree-id1411 . -4) (undo-tree-id1412 . -4) (undo-tree-id1413 . -4) (undo-tree-id1414 . -4) (undo-tree-id1415 . -4) (undo-tree-id1416 . -4) (undo-tree-id1417 . -4) (undo-tree-id1418 . -4) (undo-tree-id1419 . -4) (undo-tree-id1420 . -4) (undo-tree-id1421 . -4) (undo-tree-id1422 . -4) (undo-tree-id1423 . -4) (undo-tree-id1424 . -4) (undo-tree-id1425 . -4) (undo-tree-id1426 . -4) (undo-tree-id1427 . -4) (undo-tree-id1428 . -4) (undo-tree-id1429 . -4) (undo-tree-id1430 . -4) (undo-tree-id1431 . -4) (undo-tree-id1432 . -4) (undo-tree-id1433 . -4) (undo-tree-id1434 . -4) (undo-tree-id1435 . -4) (undo-tree-id1436 . -4) (undo-tree-id1437 . -4) (undo-tree-id1438 . -4) (undo-tree-id1439 . -4) (undo-tree-id1440 . -4) (undo-tree-id1441 . -4) (undo-tree-id1442 . -4) (undo-tree-id1443 . -4) (undo-tree-id1444 . -4) (undo-tree-id1445 . -4) (undo-tree-id1446 . -4) (undo-tree-id1447 . -4) (undo-tree-id1448 . -4) (undo-tree-id1449 . -4) (undo-tree-id1450 . -4) (undo-tree-id1451 . -4) (undo-tree-id1452 . -4) (undo-tree-id1453 . -4) (undo-tree-id1454 . -4) (undo-tree-id1455 . -4) (undo-tree-id1456 . -4) (undo-tree-id1457 . -4) (undo-tree-id1458 . -4) (undo-tree-id1459 . -4) (undo-tree-id1460 . -4) (undo-tree-id1461 . -4) (undo-tree-id1462 . -4) (undo-tree-id1463 . -4) (undo-tree-id1464 . -4) (undo-tree-id1465 . -4) (undo-tree-id1466 . -4) (undo-tree-id1467 . -4) (undo-tree-id1468 . -4) (undo-tree-id1469 . -4) (undo-tree-id1470 . -4) (undo-tree-id1471 . -4) (undo-tree-id1472 . -4) (undo-tree-id1473 . -4) (undo-tree-id1474 . -4) (undo-tree-id1475 . -4) (undo-tree-id1476 . -4) (undo-tree-id1477 . -4) 1217 (#("_" 0 1 (face font-lock-function-name-face fontified t)) . -1217) (undo-tree-id1478 . -1) (undo-tree-id1479 . -1) (undo-tree-id1480 . -1) (undo-tree-id1481 . -1) (undo-tree-id1482 . -1) (undo-tree-id1483 . -1) (undo-tree-id1484 . -1) (undo-tree-id1485 . -1) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) (undo-tree-id1491 . -1) (undo-tree-id1492 . -1) (undo-tree-id1493 . -1) (undo-tree-id1494 . -1) (undo-tree-id1495 . -1) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) (undo-tree-id1498 . -1) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) (undo-tree-id1501 . -1) (undo-tree-id1502 . -1) (undo-tree-id1503 . -1) (undo-tree-id1504 . -1) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) (undo-tree-id1508 . -1) (undo-tree-id1509 . -1) (undo-tree-id1510 . -1) (undo-tree-id1511 . -1) (undo-tree-id1512 . -1) (undo-tree-id1513 . -1) (undo-tree-id1514 . -1) (undo-tree-id1515 . -1) (undo-tree-id1516 . -1) (undo-tree-id1517 . -1) (undo-tree-id1518 . -1) (undo-tree-id1519 . -1) (undo-tree-id1520 . -1) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) (undo-tree-id1559 . -1) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) (undo-tree-id1566 . -1) (undo-tree-id1567 . -1) (undo-tree-id1568 . -1) (undo-tree-id1569 . -1) (undo-tree-id1570 . -1) (undo-tree-id1571 . -1) (undo-tree-id1572 . -1) (undo-tree-id1573 . -1) (undo-tree-id1574 . -1) (undo-tree-id1575 . -1) (undo-tree-id1576 . -1) (undo-tree-id1577 . -1) (undo-tree-id1578 . -1) (undo-tree-id1579 . -1) (undo-tree-id1580 . -1) (undo-tree-id1581 . -1) 1218 (#("rec" 0 3 (face font-lock-function-name-face fontified t)) . -1218) (undo-tree-id1582 . -3) (undo-tree-id1583 . -3) (undo-tree-id1584 . -2) (undo-tree-id1585 . -2) (undo-tree-id1586 . -2) (undo-tree-id1587 . -2) (undo-tree-id1588 . -2) (undo-tree-id1589 . -2) (undo-tree-id1590 . -2) (undo-tree-id1591 . -2) (undo-tree-id1592 . -2) (undo-tree-id1593 . -2) (undo-tree-id1594 . -2) (undo-tree-id1595 . -2) (undo-tree-id1596 . -2) (undo-tree-id1597 . -2) (undo-tree-id1598 . -2) (undo-tree-id1599 . -2) (undo-tree-id1600 . -2) (undo-tree-id1601 . -2) (undo-tree-id1602 . -2) (undo-tree-id1603 . -2) (undo-tree-id1604 . -2) (undo-tree-id1605 . -2) (undo-tree-id1606 . -2) (undo-tree-id1607 . -2) (undo-tree-id1608 . -2) (undo-tree-id1609 . -3) (undo-tree-id1610 . -3) (undo-tree-id1611 . -3) (undo-tree-id1612 . -3) (undo-tree-id1613 . -3) (undo-tree-id1614 . -3) (undo-tree-id1615 . -3) (undo-tree-id1616 . -3) (undo-tree-id1617 . -3) (undo-tree-id1618 . -3) (undo-tree-id1619 . -3) (undo-tree-id1620 . -3) (undo-tree-id1621 . -3) (undo-tree-id1622 . -3) (undo-tree-id1623 . -3) (undo-tree-id1624 . -3) (undo-tree-id1625 . -3) (undo-tree-id1626 . -3) (undo-tree-id1627 . -3) (undo-tree-id1628 . -3) (undo-tree-id1629 . -3) (undo-tree-id1630 . -3) (undo-tree-id1631 . -3) (undo-tree-id1632 . -3) (undo-tree-id1633 . -3) (undo-tree-id1634 . -3) 1221 (t 25353 48416 0 0)) nil (25353 48446 189097 803000) 0 nil])
([nil nil ((#("prec_" 0 5 (fontified t)) . 1304) (undo-tree-id1644 . -4) (undo-tree-id1645 . -4) (undo-tree-id1646 . -4) (undo-tree-id1647 . -5) (undo-tree-id1648 . -4) (undo-tree-id1649 . -3) (undo-tree-id1650 . -3) (undo-tree-id1651 . -3) (undo-tree-id1652 . -3) (undo-tree-id1653 . -3) (undo-tree-id1654 . -3) (undo-tree-id1655 . -3) (undo-tree-id1656 . -3) (undo-tree-id1657 . -3) (undo-tree-id1658 . -3) (undo-tree-id1659 . -3) (undo-tree-id1660 . -3) (undo-tree-id1661 . -3) (undo-tree-id1662 . -3) (undo-tree-id1663 . -3) (undo-tree-id1664 . -3) (undo-tree-id1665 . -3) (undo-tree-id1666 . -3) (undo-tree-id1667 . -3) (undo-tree-id1668 . -3) (undo-tree-id1669 . -3) (undo-tree-id1670 . -3) (undo-tree-id1671 . -3) (undo-tree-id1672 . -3) (undo-tree-id1673 . -3) (undo-tree-id1674 . -4) (undo-tree-id1675 . -4) (undo-tree-id1676 . -4) (undo-tree-id1677 . -4) (undo-tree-id1678 . -4) (undo-tree-id1679 . -4) (undo-tree-id1680 . -4) (undo-tree-id1681 . -4) (undo-tree-id1682 . -4) (undo-tree-id1683 . -4) (undo-tree-id1684 . -4) (undo-tree-id1685 . -4) (undo-tree-id1686 . -4) (undo-tree-id1687 . -4) (undo-tree-id1688 . -4) (undo-tree-id1689 . -4) (undo-tree-id1690 . -4) (undo-tree-id1691 . -4) (undo-tree-id1692 . -4) (undo-tree-id1693 . -4) (undo-tree-id1694 . -4) (undo-tree-id1695 . -4) (undo-tree-id1696 . -4) (undo-tree-id1697 . -4) (undo-tree-id1698 . -4) (undo-tree-id1699 . -4) 1308 (t 25353 48441 0 0)) nil (25353 48452 514920 991000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . 1304) (undo-tree-id1642 . 1) (undo-tree-id1643 . 1)) nil (25353 48452 514720 197000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 1304) (undo-tree-id1639 . 1) (undo-tree-id1640 . 1) (undo-tree-id1641 . 1)) nil (25353 48452 514713 492000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . 1304) (undo-tree-id1635 . 1) (undo-tree-id1636 . 1) (undo-tree-id1637 . 1) (undo-tree-id1638 . 1)) nil (25353 48452 514704 343000) 0 nil])
([nil nil ((1304 . 1309)) nil (25353 48452 514675 708000) 0 nil])
([nil nil ((1299 . 1300) (#("1" 0 1 (fontified t)) . 1299) (t 25353 48448 0 0)) nil (25353 48582 150967 919000) 0 nil])
([nil nil ((316 . 317) (t 25353 48577 0 0)) nil (25353 48619 9375 811000) 0 nil])
([nil nil ((369 . 376) (#("f" 0 1 (fontified t)) . -369) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (undo-tree-id1710 . -1) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) (undo-tree-id1715 . -1) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) (undo-tree-id1724 . -1) (undo-tree-id1725 . -1) (undo-tree-id1726 . -1) (undo-tree-id1727 . -1) (undo-tree-id1728 . -1) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (undo-tree-id1735 . -1) (undo-tree-id1736 . -1) (undo-tree-id1737 . -1) (undo-tree-id1738 . -1) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) (undo-tree-id1745 . -1) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) (undo-tree-id1754 . -1) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) (undo-tree-id1757 . -1) (undo-tree-id1758 . -1) (undo-tree-id1759 . -1) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) (undo-tree-id1768 . -1) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) (undo-tree-id1778 . -1) (#("," 0 1 (fontified t)) . -370) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) (undo-tree-id1789 . -1) (undo-tree-id1790 . -1) (undo-tree-id1791 . -1) (undo-tree-id1792 . -1) (undo-tree-id1793 . -1) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) (undo-tree-id1802 . -1) (undo-tree-id1803 . -1) (undo-tree-id1804 . -1) (undo-tree-id1805 . -1) 371 (368 . 371) (357 . 368) (#("o" 0 1 (face font-lock-type-face fontified t)) . -357) (undo-tree-id1806 . -1) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) (undo-tree-id1827 . -1) (undo-tree-id1828 . -1) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (undo-tree-id1831 . -1) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) (undo-tree-id1848 . -1) (undo-tree-id1849 . -1) (undo-tree-id1850 . -1) (undo-tree-id1851 . -1) (undo-tree-id1852 . -1) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) (undo-tree-id1865 . -1) (undo-tree-id1866 . -1) (undo-tree-id1867 . -1) (undo-tree-id1868 . -1) (undo-tree-id1869 . -1) (undo-tree-id1870 . -1) (undo-tree-id1871 . -1) (undo-tree-id1872 . -1) (undo-tree-id1873 . -1) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) (undo-tree-id1898 . -1) (undo-tree-id1899 . -1) (undo-tree-id1900 . -1) (undo-tree-id1901 . -1) (undo-tree-id1902 . -1) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) (undo-tree-id1905 . -1) (undo-tree-id1906 . -1) (undo-tree-id1907 . -1) (undo-tree-id1908 . -1) (undo-tree-id1909 . -1) (undo-tree-id1910 . -1) (undo-tree-id1911 . -1) (undo-tree-id1912 . -1) (undo-tree-id1913 . -1) (undo-tree-id1914 . -1) (undo-tree-id1915 . -1) (undo-tree-id1916 . -1) (undo-tree-id1917 . -1) (undo-tree-id1918 . -1) (undo-tree-id1919 . -1) (undo-tree-id1920 . -1) (undo-tree-id1921 . -1) (undo-tree-id1922 . -1) (undo-tree-id1923 . -1) (undo-tree-id1924 . -1) (undo-tree-id1925 . -1) (undo-tree-id1926 . -1) (undo-tree-id1927 . -1) (undo-tree-id1928 . -1) (undo-tree-id1929 . -1) (undo-tree-id1930 . -1) (undo-tree-id1931 . -1) (undo-tree-id1932 . -1) (undo-tree-id1933 . -1) (undo-tree-id1934 . -1) (undo-tree-id1935 . -1) (undo-tree-id1936 . -1) (#("t" 0 1 (face font-lock-type-face fontified t)) . -358) (undo-tree-id1937 . -1) (undo-tree-id1938 . -1) (undo-tree-id1939 . -1) (undo-tree-id1940 . -1) (undo-tree-id1941 . -1) (undo-tree-id1942 . -1) (undo-tree-id1943 . -1) (undo-tree-id1944 . -1) (undo-tree-id1945 . -1) (undo-tree-id1946 . -1) (undo-tree-id1947 . -1) (undo-tree-id1948 . -1) (undo-tree-id1949 . -1) (undo-tree-id1950 . -1) (undo-tree-id1951 . -1) (undo-tree-id1952 . -1) (undo-tree-id1953 . -1) (undo-tree-id1954 . -1) (undo-tree-id1955 . -1) (undo-tree-id1956 . -1) (undo-tree-id1957 . -1) (undo-tree-id1958 . -1) (undo-tree-id1959 . -1) (undo-tree-id1960 . -1) (undo-tree-id1961 . -1) (undo-tree-id1962 . -1) (undo-tree-id1963 . -1) (undo-tree-id1964 . -1) (undo-tree-id1965 . -1) (undo-tree-id1966 . -1) (undo-tree-id1967 . -1) (undo-tree-id1968 . -1) (undo-tree-id1969 . -1) (undo-tree-id1970 . -1) (undo-tree-id1971 . -1) (undo-tree-id1972 . -1) (undo-tree-id1973 . -1) (undo-tree-id1974 . -1) (undo-tree-id1975 . -1) (undo-tree-id1976 . -1) (undo-tree-id1977 . -1) (undo-tree-id1978 . -1) (undo-tree-id1979 . -1) (undo-tree-id1980 . -1) (undo-tree-id1981 . -1) (undo-tree-id1982 . -1) (undo-tree-id1983 . -1) (undo-tree-id1984 . -1) (undo-tree-id1985 . -1) (undo-tree-id1986 . -1) (undo-tree-id1987 . -1) (undo-tree-id1988 . -1) (undo-tree-id1989 . -1) (undo-tree-id1990 . -1) (undo-tree-id1991 . -1) (undo-tree-id1992 . -1) (undo-tree-id1993 . -1) (undo-tree-id1994 . -1) (undo-tree-id1995 . -1) (undo-tree-id1996 . -1) (undo-tree-id1997 . -1) (undo-tree-id1998 . -1) (undo-tree-id1999 . -1) (undo-tree-id2000 . -1) (undo-tree-id2001 . -1) (undo-tree-id2002 . -1) (undo-tree-id2003 . -1) (undo-tree-id2004 . -1) (undo-tree-id2005 . -1) (undo-tree-id2006 . -1) (undo-tree-id2007 . -1) (undo-tree-id2008 . -1) (undo-tree-id2009 . -1) (undo-tree-id2010 . -1) (undo-tree-id2011 . -1) (undo-tree-id2012 . -1) (undo-tree-id2013 . -1) (undo-tree-id2014 . -1) (undo-tree-id2015 . -1) (#("r" 0 1 (face font-lock-type-face fontified t)) . -359) (undo-tree-id2016 . -1) (undo-tree-id2017 . -1) (undo-tree-id2018 . -1) (undo-tree-id2019 . -1) (undo-tree-id2020 . -1) (undo-tree-id2021 . -1) (undo-tree-id2022 . -1) (undo-tree-id2023 . -1) (undo-tree-id2024 . -1) (undo-tree-id2025 . -1) (undo-tree-id2026 . -1) (undo-tree-id2027 . -1) (undo-tree-id2028 . -1) (undo-tree-id2029 . -1) (undo-tree-id2030 . -1) (undo-tree-id2031 . -1) (undo-tree-id2032 . -1) (undo-tree-id2033 . -1) (undo-tree-id2034 . -1) (undo-tree-id2035 . -1) (undo-tree-id2036 . -1) (undo-tree-id2037 . -1) (undo-tree-id2038 . -1) (undo-tree-id2039 . -1) (undo-tree-id2040 . -1) (undo-tree-id2041 . -1) (undo-tree-id2042 . -1) 360 (343 . 360) (322 . 343) (#("p" 0 1 (fontified t)) . -322) (undo-tree-id2043 . -1) 323 (316 . 323)) nil (25353 48619 9342 427000) 0 nil])
([nil nil ((869 . 870) (#("\\varepsilon" 0 1 (fontified t syntax-table (1)) 1 11 (fontified t)) . 869) (undo-tree-id0 . -11) 880 (866 . 880) (t 25353 48614 0 0)) nil (25367 63391 252365 590000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -796) (undo-tree-id18 . -1) (#(" " 0 1 (fontified t)) . -797) (undo-tree-id19 . -1) (#(" " 0 1 (fontified t)) . -798) (undo-tree-id20 . -1) (#("\\" 0 1 (fontified t syntax-table (1))) . -799) (undo-tree-id21 . -1) 800 (#("vare" 0 4 (fontified t)) . -800) (undo-tree-id22 . -4) 804 (799 . 804) (794 . 799) (t 25367 63384 0 0)) nil (25367 63450 540473 73000) 0 nil])
([nil nil ((#(" 
" 0 1 (fontified t) 1 2 (fontified t)) . 795)) ((795 . 797)) (25367 63451 644871 577000) 0 nil])
([nil nil ((869 . 873) (#("ε" 0 1 (fontified t)) . 869) (undo-tree-id209 . -1)) ((869 . 870) (#("1e-3" 0 3 (fontified t) 3 4 (fontified t)) . 869) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id55 . -3) (undo-tree-id57 . -3) (undo-tree-id59 . -3) (undo-tree-id61 . -3) (undo-tree-id63 . -3) (undo-tree-id65 . -3) (undo-tree-id67 . -3) (undo-tree-id69 . -3) (undo-tree-id71 . -3) (undo-tree-id73 . -3) (undo-tree-id75 . -3) (undo-tree-id77 . -3) (undo-tree-id79 . -3) (undo-tree-id81 . -3) (undo-tree-id83 . -3) (undo-tree-id85 . -3) (undo-tree-id87 . -3) (undo-tree-id89 . -3) (undo-tree-id91 . -3) (undo-tree-id93 . -3) (undo-tree-id95 . -3) (undo-tree-id97 . -3) (undo-tree-id99 . -3) (undo-tree-id101 . -3) (undo-tree-id103 . -3) (undo-tree-id105 . -3) (undo-tree-id107 . -3) (undo-tree-id109 . -3) (undo-tree-id111 . -3) (undo-tree-id113 . -3) (undo-tree-id115 . -3) (undo-tree-id117 . -3) (undo-tree-id119 . -3) (undo-tree-id121 . -3) (undo-tree-id123 . -3) (undo-tree-id125 . -3) (undo-tree-id127 . -3) (undo-tree-id129 . -3) (undo-tree-id131 . -3) (undo-tree-id133 . -3) (undo-tree-id135 . -3) (undo-tree-id137 . -3) (undo-tree-id139 . -3) (undo-tree-id141 . -3) (undo-tree-id143 . -3) (undo-tree-id145 . -3) (undo-tree-id147 . -3) (undo-tree-id149 . -3) (undo-tree-id151 . -3) (undo-tree-id153 . -3) (undo-tree-id155 . -3) (undo-tree-id157 . -3) (undo-tree-id159 . -3) (undo-tree-id161 . -3) (undo-tree-id163 . -3) (undo-tree-id165 . -3) (undo-tree-id167 . -3) (undo-tree-id169 . -3) (undo-tree-id171 . -3) (undo-tree-id173 . -3) (undo-tree-id175 . -3) (undo-tree-id177 . -3) (undo-tree-id179 . -3) (undo-tree-id181 . -3) (undo-tree-id183 . -3) (undo-tree-id185 . -3) (undo-tree-id187 . -3) (undo-tree-id189 . -3) (undo-tree-id191 . -3) (undo-tree-id193 . -3) (undo-tree-id195 . -3) (undo-tree-id197 . -3) (undo-tree-id199 . -3) (undo-tree-id201 . -3) (undo-tree-id203 . -3) (undo-tree-id205 . -3) (undo-tree-id207 . -3)) (25367 63452 840038 121000) 0 nil])
([nil nil ((#("1e-3;" 0 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 869) (undo-tree-id1226 . -4) (undo-tree-id1227 . 1) (undo-tree-id1228 . -4) (undo-tree-id1229 . -3) (undo-tree-id1230 . -4) (undo-tree-id1231 . 1) (undo-tree-id1232 . 1) (undo-tree-id1233 . -5) (undo-tree-id1234 . -4) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -2) (undo-tree-id1261 . -2) (undo-tree-id1262 . -2) (undo-tree-id1263 . -2) (undo-tree-id1264 . -2) (undo-tree-id1265 . -2) (undo-tree-id1266 . -2) (undo-tree-id1267 . -2) (undo-tree-id1268 . -2) (undo-tree-id1269 . -2) (undo-tree-id1270 . -2) (undo-tree-id1271 . -2) (undo-tree-id1272 . -2) (undo-tree-id1273 . -2) (undo-tree-id1274 . -2) (undo-tree-id1275 . -2) (undo-tree-id1276 . -2) (undo-tree-id1277 . -2) (undo-tree-id1278 . -2) (undo-tree-id1279 . -2) (undo-tree-id1280 . -2) (undo-tree-id1281 . -2) (undo-tree-id1282 . -2) (undo-tree-id1283 . -2) (undo-tree-id1284 . -2) (undo-tree-id1285 . -3) (undo-tree-id1286 . -3) (undo-tree-id1287 . -3) (undo-tree-id1288 . -3) (undo-tree-id1289 . -3) (undo-tree-id1290 . -3) (undo-tree-id1291 . -3) (undo-tree-id1292 . -3) (undo-tree-id1293 . -3) (undo-tree-id1294 . -3) (undo-tree-id1295 . -3) (undo-tree-id1296 . -3) (undo-tree-id1297 . -3) (undo-tree-id1298 . -3) (undo-tree-id1299 . -3) (undo-tree-id1300 . -3) (undo-tree-id1301 . -3) (undo-tree-id1302 . -3) (undo-tree-id1303 . -3) (undo-tree-id1304 . -3) (undo-tree-id1305 . -3) (undo-tree-id1306 . -3) (undo-tree-id1307 . -3) (undo-tree-id1308 . -3) (undo-tree-id1309 . -3) (undo-tree-id1310 . -4) (undo-tree-id1311 . -4) (undo-tree-id1312 . -4) (undo-tree-id1313 . -4) (undo-tree-id1314 . -4) (undo-tree-id1315 . -4) (undo-tree-id1316 . -4) (undo-tree-id1317 . -4) (undo-tree-id1318 . -4) (undo-tree-id1319 . -4) (undo-tree-id1320 . -4) (undo-tree-id1321 . -4) (undo-tree-id1322 . -4) (undo-tree-id1323 . -4) (undo-tree-id1324 . -4) (undo-tree-id1325 . -4) (undo-tree-id1326 . -4) (undo-tree-id1327 . -4) (undo-tree-id1328 . -4) (undo-tree-id1329 . -4) (undo-tree-id1330 . -4) (undo-tree-id1331 . -4) (undo-tree-id1332 . -4) (undo-tree-id1333 . -4) (undo-tree-id1334 . -4) (undo-tree-id1335 . -4) (undo-tree-id1336 . -4) (undo-tree-id1337 . -4) (undo-tree-id1338 . -4) (undo-tree-id1339 . -4) (undo-tree-id1340 . -4) (undo-tree-id1341 . -4) (undo-tree-id1342 . -4) (undo-tree-id1343 . -4) (undo-tree-id1344 . -4) (undo-tree-id1345 . -4) (undo-tree-id1346 . -4) (undo-tree-id1347 . -4) (undo-tree-id1348 . -4) (undo-tree-id1349 . -4) (undo-tree-id1350 . -4) (undo-tree-id1351 . -4) (undo-tree-id1352 . -4) (undo-tree-id1353 . -4) (undo-tree-id1354 . -4) (undo-tree-id1355 . -4) (undo-tree-id1356 . -4) (undo-tree-id1357 . -4) (undo-tree-id1358 . -4) (undo-tree-id1359 . -4) (undo-tree-id1360 . -4) 873) nil (25367 63465 107356 282000) 0 nil] [nil nil ((872 . 873) (#("3" 0 1 (fontified t)) . 872) (t 25367 63411 0 0)) ((872 . 873) (#("5" 0 1 (fontified t)) . 872)) (25367 63448 625925 991000) 0 nil])
([nil nil ((869 . 874)) nil (25367 63472 224632 24000) 0 nil] [nil nil ((#(" " 0 1 (fontified t)) . 869) (undo-tree-id1221 . 1) (undo-tree-id1222 . 1) (undo-tree-id1224 . 1)) ((869 . 870)) (25367 63464 274857 934000) 0 nil])
([nil nil ((1422 . 1429) (t 25367 63412 0 0)) ((#(" + 1e-5" 0 6 (fontified t) 6 7 (fontified t)) . 1422) (undo-tree-id23 . -6) (undo-tree-id24 . -6) (undo-tree-id25 . -6) (undo-tree-id26 . -6) (undo-tree-id27 . -6) (undo-tree-id28 . -6) (undo-tree-id29 . -6) (undo-tree-id30 . -6) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -6) (undo-tree-id35 . -6) (undo-tree-id36 . -6) (undo-tree-id37 . -6) (undo-tree-id38 . -6) (undo-tree-id39 . -6) (undo-tree-id40 . -6) (undo-tree-id41 . -6) (undo-tree-id42 . -6) (undo-tree-id43 . -6) (undo-tree-id44 . -6) (undo-tree-id45 . -6) (undo-tree-id46 . -6) (undo-tree-id47 . -6) (undo-tree-id48 . -6) (undo-tree-id49 . -6) (undo-tree-id50 . -6) (undo-tree-id51 . -6)) (25367 63448 491945 192000) 0 nil])
([nil nil ((1422 . 1429)) nil (25367 63472 224624 830000) 0 nil])
([nil nil ((866 . 868) (#(" " 0 1 (fontified t)) . -866) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id217 . -1) (undo-tree-id219 . -1) (undo-tree-id221 . -1) (undo-tree-id223 . -1) (undo-tree-id225 . -1) (undo-tree-id227 . -1) (undo-tree-id229 . -1) (undo-tree-id231 . -1) (undo-tree-id233 . -1) (undo-tree-id235 . -1) (undo-tree-id237 . -1) (undo-tree-id239 . -1) (undo-tree-id241 . -1) (undo-tree-id243 . -1) (undo-tree-id245 . -1) (undo-tree-id247 . -1) (undo-tree-id249 . -1) (undo-tree-id251 . -1) (undo-tree-id253 . -1) (undo-tree-id255 . -1) (undo-tree-id257 . -1) (undo-tree-id259 . -1) (undo-tree-id261 . -1) (undo-tree-id263 . -1) (undo-tree-id265 . -1) (undo-tree-id267 . -1) (undo-tree-id269 . -1) (undo-tree-id271 . -1) (undo-tree-id273 . -1) (undo-tree-id275 . -1) (undo-tree-id277 . -1) (undo-tree-id279 . -1) (undo-tree-id281 . -1) (undo-tree-id283 . -1) (undo-tree-id285 . -1) (undo-tree-id287 . -1) (undo-tree-id289 . -1) (undo-tree-id291 . -1) (undo-tree-id293 . -1) (undo-tree-id295 . -1) (undo-tree-id297 . -1) (undo-tree-id299 . -1) (undo-tree-id301 . -1) (undo-tree-id303 . -1) (undo-tree-id305 . -1) (undo-tree-id307 . -1) (undo-tree-id309 . -1) (undo-tree-id311 . -1) (undo-tree-id313 . -1) (undo-tree-id315 . -1) (undo-tree-id317 . -1) (undo-tree-id319 . -1) (undo-tree-id321 . -1) (undo-tree-id323 . -1) (undo-tree-id325 . -1) (undo-tree-id327 . -1) (undo-tree-id329 . -1) (undo-tree-id331 . -1) (undo-tree-id333 . -1) (undo-tree-id335 . -1) (undo-tree-id337 . -1) (undo-tree-id339 . -1) (undo-tree-id341 . -1) (undo-tree-id343 . -1) (undo-tree-id345 . -1) (undo-tree-id347 . -1) (undo-tree-id349 . -1) (undo-tree-id351 . -1) (undo-tree-id353 . -1) (undo-tree-id355 . -1) (undo-tree-id357 . -1) (undo-tree-id359 . -1) (undo-tree-id361 . -1) (undo-tree-id363 . -1) (undo-tree-id365 . -1) (undo-tree-id367 . -1) (undo-tree-id369 . -1) (undo-tree-id371 . -1) (undo-tree-id373 . -1) (undo-tree-id375 . -1) (undo-tree-id377 . -1) (undo-tree-id379 . -1) (undo-tree-id381 . -1) (undo-tree-id383 . -1) (undo-tree-id385 . -1) (undo-tree-id387 . -1) (undo-tree-id389 . -1) (undo-tree-id391 . -1) (undo-tree-id393 . -1) (undo-tree-id395 . -1) (undo-tree-id397 . -1) (undo-tree-id399 . -1) (undo-tree-id401 . -1) (undo-tree-id403 . -1) (undo-tree-id405 . -1) (undo-tree-id407 . -1) (undo-tree-id409 . -1) (undo-tree-id411 . -1) (undo-tree-id413 . -1) (undo-tree-id415 . -1) (undo-tree-id417 . -1) (undo-tree-id419 . -1) (undo-tree-id421 . -1) (undo-tree-id423 . -1) (undo-tree-id425 . -1) (undo-tree-id427 . -1) (undo-tree-id429 . -1) (undo-tree-id431 . -1) (undo-tree-id433 . -1) (undo-tree-id435 . -1) (undo-tree-id437 . -1) (undo-tree-id439 . -1) (undo-tree-id441 . -1) (undo-tree-id443 . -1) (undo-tree-id445 . -1) (undo-tree-id447 . -1) (undo-tree-id449 . -1) (undo-tree-id451 . -1) (undo-tree-id453 . -1) (undo-tree-id455 . -1) (undo-tree-id457 . -1) (undo-tree-id459 . -1) (undo-tree-id461 . -1) (undo-tree-id463 . -1) (undo-tree-id465 . -1) (undo-tree-id467 . -1) (undo-tree-id469 . -1) (undo-tree-id471 . -1) (undo-tree-id473 . -1) (undo-tree-id475 . -1) (undo-tree-id477 . -1) (undo-tree-id479 . -1) (undo-tree-id481 . -1) (undo-tree-id483 . -1) (undo-tree-id485 . -1) (undo-tree-id487 . -1) (undo-tree-id489 . -1) (undo-tree-id491 . -1) (undo-tree-id493 . -1) (undo-tree-id495 . -1) (undo-tree-id497 . -1) (undo-tree-id499 . -1) (undo-tree-id501 . -1) (undo-tree-id503 . -1) (undo-tree-id505 . -1) (undo-tree-id507 . -1) (undo-tree-id509 . -1) (undo-tree-id511 . -1) (undo-tree-id513 . -1) (undo-tree-id515 . -1) (undo-tree-id517 . -1) (undo-tree-id519 . -1) (undo-tree-id521 . -1) (undo-tree-id523 . -1) (undo-tree-id525 . -1) (undo-tree-id527 . -1) (undo-tree-id529 . -1) (undo-tree-id531 . -1) (undo-tree-id533 . -1) (undo-tree-id535 . -1) (undo-tree-id537 . -1) (undo-tree-id539 . -1) (undo-tree-id541 . -1) (undo-tree-id543 . -1) (undo-tree-id545 . -1) (undo-tree-id547 . -1) (undo-tree-id549 . -1) (undo-tree-id551 . -1) (undo-tree-id553 . -1) (undo-tree-id555 . -1) (undo-tree-id557 . -1) (undo-tree-id559 . -1) (undo-tree-id561 . -1) (undo-tree-id563 . -1) (undo-tree-id565 . -1) (undo-tree-id567 . -1) (undo-tree-id569 . -1) (undo-tree-id571 . -1) (#("+" 0 1 (fontified t)) . -867) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id580 . -1) (undo-tree-id582 . -1) (undo-tree-id584 . -1) (undo-tree-id586 . -1) (undo-tree-id588 . -1) (undo-tree-id590 . -1) (undo-tree-id592 . -1) (undo-tree-id594 . -1) (undo-tree-id596 . -1) (undo-tree-id598 . -1) (undo-tree-id600 . -1) (undo-tree-id602 . -1) (undo-tree-id604 . -1) (undo-tree-id606 . -1) (undo-tree-id608 . -1) (undo-tree-id610 . -1) (undo-tree-id612 . -1) (undo-tree-id614 . -1) (undo-tree-id616 . -1) (undo-tree-id618 . -1) (undo-tree-id620 . -1) (undo-tree-id622 . -1) (undo-tree-id624 . -1) (undo-tree-id626 . -1) (undo-tree-id628 . -1) (undo-tree-id630 . -1) (undo-tree-id632 . -1) (undo-tree-id634 . -1) (undo-tree-id636 . -1) (undo-tree-id638 . -1) (undo-tree-id640 . -1) (undo-tree-id642 . -1) (undo-tree-id644 . -1) (undo-tree-id646 . -1) (undo-tree-id648 . -1) (undo-tree-id650 . -1) (undo-tree-id652 . -1) (undo-tree-id654 . -1) (undo-tree-id656 . -1) (undo-tree-id658 . -1) (undo-tree-id660 . -1) (undo-tree-id662 . -1) (undo-tree-id664 . -1) (undo-tree-id666 . -1) (undo-tree-id668 . -1) (undo-tree-id670 . -1) (undo-tree-id672 . -1) (undo-tree-id674 . -1) (undo-tree-id676 . -1) (undo-tree-id678 . -1) (undo-tree-id680 . -1) (undo-tree-id682 . -1) (undo-tree-id684 . -1) (undo-tree-id686 . -1) (undo-tree-id688 . -1) (undo-tree-id690 . -1) (undo-tree-id692 . -1) (undo-tree-id694 . -1) (undo-tree-id696 . -1) (undo-tree-id698 . -1) (undo-tree-id700 . -1) (undo-tree-id702 . -1) (undo-tree-id704 . -1) (undo-tree-id706 . -1) (undo-tree-id708 . -1) (undo-tree-id710 . -1) (undo-tree-id712 . -1) (undo-tree-id714 . -1) (undo-tree-id716 . -1) (undo-tree-id718 . -1) (undo-tree-id720 . -1) (undo-tree-id722 . -1) (undo-tree-id724 . -1) (undo-tree-id726 . -1) (undo-tree-id728 . -1) (undo-tree-id730 . -1) (undo-tree-id732 . -1) (undo-tree-id734 . -1) (undo-tree-id736 . -1) (undo-tree-id738 . -1) (undo-tree-id740 . -1) (undo-tree-id742 . -1) (undo-tree-id744 . -1) (undo-tree-id746 . -1) (undo-tree-id748 . -1) (undo-tree-id750 . -1) (undo-tree-id752 . -1) (undo-tree-id754 . -1) (undo-tree-id756 . -1) (undo-tree-id758 . -1) (undo-tree-id760 . -1) (undo-tree-id762 . -1) (undo-tree-id764 . -1) (undo-tree-id766 . -1) (undo-tree-id768 . -1) (undo-tree-id770 . -1) (undo-tree-id772 . -1) (undo-tree-id774 . -1) (undo-tree-id776 . -1) (undo-tree-id778 . -1) (undo-tree-id780 . -1) (undo-tree-id782 . -1) (undo-tree-id784 . -1) (undo-tree-id786 . -1) (undo-tree-id788 . -1) (undo-tree-id790 . -1) (undo-tree-id792 . -1) (undo-tree-id794 . -1) (undo-tree-id796 . -1) (undo-tree-id798 . -1) (undo-tree-id800 . -1) (undo-tree-id802 . -1) (undo-tree-id804 . -1) (undo-tree-id806 . -1) (undo-tree-id808 . -1) (undo-tree-id810 . -1) (undo-tree-id812 . -1) (undo-tree-id814 . -1) (undo-tree-id816 . -1) (undo-tree-id818 . -1) (undo-tree-id820 . -1) (undo-tree-id822 . -1) (undo-tree-id824 . -1) (undo-tree-id826 . -1) (undo-tree-id828 . -1) (undo-tree-id830 . -1) (undo-tree-id832 . -1) (undo-tree-id834 . -1) (undo-tree-id836 . -1) (undo-tree-id838 . -1) (undo-tree-id840 . -1) (undo-tree-id842 . -1) (undo-tree-id844 . -1) (undo-tree-id846 . -1) (undo-tree-id848 . -1) (undo-tree-id850 . -1) (undo-tree-id852 . -1) (undo-tree-id854 . -1) (undo-tree-id856 . -1) (undo-tree-id858 . -1) (undo-tree-id860 . -1) (undo-tree-id862 . -1) (undo-tree-id864 . -1) (undo-tree-id866 . -1) (undo-tree-id868 . -1) (undo-tree-id870 . -1) (undo-tree-id872 . -1) (undo-tree-id874 . -1) (undo-tree-id876 . -1) (undo-tree-id878 . -1) (undo-tree-id880 . -1) (undo-tree-id882 . -1) (undo-tree-id884 . -1) (undo-tree-id886 . -1) (undo-tree-id888 . -1) (undo-tree-id890 . -1) (undo-tree-id892 . -1) (undo-tree-id894 . -1) (undo-tree-id896 . -1) (undo-tree-id898 . -1) (undo-tree-id900 . -1) (undo-tree-id902 . -1) (undo-tree-id904 . -1) (undo-tree-id906 . -1) (undo-tree-id908 . -1) (#(" " 0 1 (fontified t)) . -868) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id917 . -1) (undo-tree-id919 . -1) (undo-tree-id921 . -1) (undo-tree-id923 . -1) (undo-tree-id925 . -1) (undo-tree-id927 . -1) (undo-tree-id929 . -1) (undo-tree-id931 . -1) (undo-tree-id933 . -1) (undo-tree-id935 . -1) (undo-tree-id937 . -1) (undo-tree-id939 . -1) (undo-tree-id941 . -1) (undo-tree-id943 . -1) (undo-tree-id945 . -1) (undo-tree-id947 . -1) (undo-tree-id949 . -1) (undo-tree-id951 . -1) (undo-tree-id953 . -1) (undo-tree-id955 . -1) (undo-tree-id957 . -1) (undo-tree-id959 . -1) (undo-tree-id961 . -1) (undo-tree-id963 . -1) (undo-tree-id965 . -1) (undo-tree-id967 . -1) (undo-tree-id969 . -1) (undo-tree-id971 . -1) (undo-tree-id973 . -1) (undo-tree-id975 . -1) (undo-tree-id977 . -1) (undo-tree-id979 . -1) (undo-tree-id981 . -1) (undo-tree-id983 . -1) (undo-tree-id985 . -1) (undo-tree-id987 . -1) (undo-tree-id989 . -1) (undo-tree-id991 . -1) (undo-tree-id993 . -1) (undo-tree-id995 . -1) (undo-tree-id997 . -1) (undo-tree-id999 . -1) (undo-tree-id1001 . -1) (undo-tree-id1003 . -1) (undo-tree-id1005 . -1) (undo-tree-id1007 . -1) (undo-tree-id1009 . -1) (undo-tree-id1011 . -1) (undo-tree-id1013 . -1) (undo-tree-id1015 . -1) (undo-tree-id1017 . -1) (undo-tree-id1019 . -1) (undo-tree-id1021 . -1) (undo-tree-id1023 . -1) (undo-tree-id1025 . -1) (undo-tree-id1027 . -1) (undo-tree-id1029 . -1) (undo-tree-id1031 . -1) (undo-tree-id1033 . -1) (undo-tree-id1035 . -1) (undo-tree-id1037 . -1) (undo-tree-id1039 . -1) (undo-tree-id1041 . -1) (undo-tree-id1043 . -1) (undo-tree-id1045 . -1) (undo-tree-id1047 . -1) (undo-tree-id1049 . -1) (undo-tree-id1051 . -1) (undo-tree-id1053 . -1) (undo-tree-id1055 . -1) (undo-tree-id1057 . -1) (undo-tree-id1059 . -1) (undo-tree-id1061 . -1) (undo-tree-id1063 . -1) (undo-tree-id1065 . -1) (undo-tree-id1067 . -1) (undo-tree-id1069 . -1) (undo-tree-id1071 . -1) (undo-tree-id1073 . -1) (undo-tree-id1075 . -1) (undo-tree-id1077 . -1) (undo-tree-id1079 . -1) (undo-tree-id1081 . -1) (undo-tree-id1083 . -1) (undo-tree-id1085 . -1) (undo-tree-id1087 . -1) (undo-tree-id1089 . -1) (undo-tree-id1091 . -1) (undo-tree-id1093 . -1) (undo-tree-id1095 . -1) (undo-tree-id1097 . -1) (undo-tree-id1099 . -1) (undo-tree-id1101 . -1) (undo-tree-id1103 . -1) (undo-tree-id1105 . -1) (undo-tree-id1107 . -1) (undo-tree-id1109 . -1) (undo-tree-id1111 . -1) (undo-tree-id1113 . -1) (undo-tree-id1115 . -1) (undo-tree-id1117 . -1) (undo-tree-id1119 . -1) (undo-tree-id1121 . -1) (undo-tree-id1123 . -1) (undo-tree-id1125 . -1) (undo-tree-id1127 . -1) (undo-tree-id1129 . -1) (undo-tree-id1131 . -1) (undo-tree-id1133 . -1) (undo-tree-id1135 . -1) (undo-tree-id1137 . -1) (undo-tree-id1139 . -1) (undo-tree-id1141 . -1) (undo-tree-id1143 . -1) (undo-tree-id1145 . -1) (undo-tree-id1147 . -1) (undo-tree-id1149 . -1) (undo-tree-id1151 . -1) (undo-tree-id1153 . -1) (undo-tree-id1155 . -1) (undo-tree-id1157 . -1) (undo-tree-id1159 . -1) (undo-tree-id1161 . -1) (undo-tree-id1163 . -1) (undo-tree-id1165 . -1) (undo-tree-id1167 . -1) (undo-tree-id1169 . -1) (undo-tree-id1171 . -1) (undo-tree-id1173 . -1) (undo-tree-id1175 . -1) (undo-tree-id1177 . -1) (undo-tree-id1179 . -1) (undo-tree-id1181 . -1) (undo-tree-id1183 . -1) (undo-tree-id1185 . -1) (undo-tree-id1187 . -1) (undo-tree-id1189 . -1) (undo-tree-id1191 . -1) (undo-tree-id1193 . -1) (undo-tree-id1195 . -1) (undo-tree-id1197 . -1) (undo-tree-id1199 . -1) (undo-tree-id1201 . -1) (undo-tree-id1203 . -1) (undo-tree-id1205 . -1) (undo-tree-id1207 . -1) (undo-tree-id1209 . -1) (undo-tree-id1211 . -1) (undo-tree-id1213 . -1) (undo-tree-id1215 . -1) (undo-tree-id1217 . -1) (undo-tree-id1219 . -1) 869) ((866 . 869) (#("; " 0 2 (fontified t)) . 866) (undo-tree-id1361 . -1) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) (undo-tree-id1366 . -1) (undo-tree-id1367 . -1) (undo-tree-id1368 . -1) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) (undo-tree-id1371 . -1) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) (undo-tree-id1384 . -1) (undo-tree-id1385 . -1) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) (undo-tree-id1388 . -1) (undo-tree-id1389 . -1) (undo-tree-id1390 . -1) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) (undo-tree-id1414 . -1) (undo-tree-id1415 . -1) (undo-tree-id1416 . -1) (undo-tree-id1417 . -1) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) (undo-tree-id1420 . -1) (undo-tree-id1421 . -1) (undo-tree-id1422 . -1) (undo-tree-id1423 . -1) (undo-tree-id1424 . -1) (undo-tree-id1425 . -1) (undo-tree-id1426 . -1) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) (undo-tree-id1429 . -1) (undo-tree-id1430 . -1) (undo-tree-id1431 . -1) (undo-tree-id1432 . -1) (undo-tree-id1433 . -1) (undo-tree-id1434 . -1) (undo-tree-id1435 . -1) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (undo-tree-id1438 . -1) (t 25367 63450 0 0)) (25367 63457 470437 978000) 0 nil])
([nil nil ((1428 . 1429) (#("5" 0 1 (fontified t)) . 1428) (t 25367 63419 0 0)) ((1428 . 1429) (#("6" 0 1 (fontified t)) . 1428)) (25367 63448 388357 854000) 0 nil])
([nil nil ((1454 . 1455) (t 25367 63464 0 0)) nil (25369 53279 832140 133000) 0 nil])
nil
([nil nil ((872 . 873) (#("5" 0 1 (fontified t)) . 872)) ((872 . 873) (#("6" 0 1 (fontified t)) . 872) (t 25367 63435 0 0)) (25367 63443 60060 779000) 0 nil])
([nil nil ((377 . 379)) nil (25369 53279 832135 454000) 0 nil])
nil
([nil nil ((416 . 422) (395 . 416) (#("t" 0 1 (face font-lock-type-face fontified t)) . -395) (undo-tree-id0 . -1) 396 (382 . 396) (378 . 382) (#("epr" 0 3 (fontified t)) . -378) (undo-tree-id1 . -3) 381 (#("(" 0 1 (fontified t)) . -381) (undo-tree-id2 . -1) 382 (378 . 382) (#("aupr" 0 4 (fontified t)) . -378) (undo-tree-id3 . -4) 382 (378 . 382)) nil (25369 53279 832125 327000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -420) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (#(" " 0 1 (fontified t)) . -421) (undo-tree-id89 . -1) 422 (t 25369 53272 0 0)) nil (25369 53287 877591 197000) 0 nil])
([nil nil ((378 . 387)) nil (25369 53287 877581 279000) 0 nil])
([nil nil ((434 . 437) (430 . 434) (#("    " 0 4 (fontified nil)) . 429) (undo-tree-id30 . -4) (undo-tree-id31 . -4) (undo-tree-id32 . -4) (undo-tree-id33 . -4) (undo-tree-id34 . -4) (undo-tree-id35 . -4) (undo-tree-id36 . -4) (undo-tree-id37 . -4) (undo-tree-id38 . -4) (undo-tree-id39 . -4) (undo-tree-id40 . -4) (undo-tree-id41 . -4) (undo-tree-id42 . -4) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -4) (undo-tree-id46 . -4) (undo-tree-id47 . -4) (undo-tree-id48 . -4) (undo-tree-id49 . -4) (undo-tree-id50 . -4) (undo-tree-id51 . -4) (undo-tree-id52 . -4) (undo-tree-id53 . -4) (undo-tree-id54 . -4) (undo-tree-id55 . -4) (undo-tree-id56 . -4) (undo-tree-id57 . -4) (429 . 434) (#(" " 0 1 (fontified nil)) . 428) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (429 . 430)) nil (25369 53287 877573 247000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -430) (undo-tree-id4 . -4) (undo-tree-id5 . -4) (undo-tree-id6 . -4) (undo-tree-id7 . -4) (undo-tree-id8 . -4) (undo-tree-id9 . -4) (undo-tree-id10 . -4) (undo-tree-id11 . -4) (undo-tree-id12 . -4) (undo-tree-id13 . -4) (undo-tree-id14 . -4) (undo-tree-id15 . -4) (undo-tree-id16 . -4) (undo-tree-id17 . -4) (undo-tree-id18 . -4) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) (undo-tree-id24 . -4) (undo-tree-id25 . -4) (undo-tree-id26 . -4) (undo-tree-id27 . -4) (undo-tree-id28 . -4) (undo-tree-id29 . -4) 436) nil (25369 53287 877493 489000) 0 nil])
([nil nil ((429 . 433)) nil (25369 53287 877438 593000) 0 nil])
([nil nil ((#("r" 0 1 (face font-lock-function-name-face fontified t)) . 389)) nil (25369 53287 877427 209000) 0 nil])
([nil nil ((#("    
" 0 4 (fontified t) 4 5 (fontified t)) . 428) (undo-tree-id244 . -3) (undo-tree-id245 . 1) (undo-tree-id246 . -5) (undo-tree-id247 . -5) (undo-tree-id248 . -5) (undo-tree-id249 . -5) (undo-tree-id250 . -5) (undo-tree-id251 . -5) (undo-tree-id252 . -5) (undo-tree-id253 . -5) (undo-tree-id254 . -5) (undo-tree-id255 . -5) (undo-tree-id256 . -5) (undo-tree-id257 . -5) (undo-tree-id258 . -5) (undo-tree-id259 . -5) (undo-tree-id260 . -5) (undo-tree-id261 . -5) (undo-tree-id262 . -5) (undo-tree-id263 . -5) (undo-tree-id264 . -5) (undo-tree-id265 . -5) (undo-tree-id266 . -5) (undo-tree-id267 . -5) (undo-tree-id268 . -5) (undo-tree-id269 . -5) (undo-tree-id270 . -5) (undo-tree-id271 . -5) (undo-tree-id272 . -3) (undo-tree-id273 . -3) (undo-tree-id274 . -3) (undo-tree-id275 . -3) (undo-tree-id276 . -3) (undo-tree-id277 . -3) (undo-tree-id278 . -3) (undo-tree-id279 . -3) (undo-tree-id280 . -3) (undo-tree-id281 . -3) (undo-tree-id282 . -3) (undo-tree-id283 . -3) (undo-tree-id284 . -3) (undo-tree-id285 . -3) (undo-tree-id286 . -3) (undo-tree-id287 . -3) (undo-tree-id288 . -3) (undo-tree-id289 . -3) (undo-tree-id290 . -3) (undo-tree-id291 . -3) (undo-tree-id292 . -3) (undo-tree-id293 . -3) (undo-tree-id294 . -3) (undo-tree-id295 . -3) (undo-tree-id296 . -3) (undo-tree-id297 . -3) (undo-tree-id298 . -3) (undo-tree-id299 . -3) (undo-tree-id300 . -3) (undo-tree-id301 . -3) (undo-tree-id302 . -3) (undo-tree-id303 . -3) (undo-tree-id304 . -3) (undo-tree-id305 . -3) (undo-tree-id306 . -3) (undo-tree-id307 . -3) (undo-tree-id308 . -3) (undo-tree-id309 . -3) (undo-tree-id310 . -3) (undo-tree-id311 . -3) (undo-tree-id312 . -3) (undo-tree-id313 . -3) (undo-tree-id314 . -3) (undo-tree-id315 . -3) (undo-tree-id316 . -3) (undo-tree-id317 . -3) (undo-tree-id318 . -3) (undo-tree-id319 . -3) (undo-tree-id320 . -3) (undo-tree-id321 . -3) (undo-tree-id322 . -3) (undo-tree-id323 . -3) (undo-tree-id324 . -3) (undo-tree-id325 . -3) (undo-tree-id326 . -3) (undo-tree-id327 . -3) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -3) (undo-tree-id332 . -3) (undo-tree-id333 . -3) (undo-tree-id334 . -3) (undo-tree-id335 . -3) (undo-tree-id336 . -3) (undo-tree-id337 . -3) (undo-tree-id338 . -3) (undo-tree-id339 . -3) (undo-tree-id340 . -3) (undo-tree-id341 . -3) (undo-tree-id342 . -3) (undo-tree-id343 . -3) (undo-tree-id344 . -3) (undo-tree-id345 . -3) (undo-tree-id346 . -3) (undo-tree-id347 . -3) (undo-tree-id348 . -3) (undo-tree-id349 . -3) (undo-tree-id350 . -3) (undo-tree-id351 . -3) (undo-tree-id352 . -3) (undo-tree-id353 . -3) (undo-tree-id354 . -3) (undo-tree-id355 . -3) (undo-tree-id356 . -3) (undo-tree-id357 . -3) (undo-tree-id358 . -3) (undo-tree-id359 . -3) (undo-tree-id360 . -3) (undo-tree-id361 . -3) (undo-tree-id362 . -3) (undo-tree-id363 . -3) (undo-tree-id364 . -3) (undo-tree-id365 . -3) (undo-tree-id366 . -3) (undo-tree-id367 . -3) (undo-tree-id368 . -3) (undo-tree-id369 . -3) (undo-tree-id370 . -3) (undo-tree-id371 . -3) (undo-tree-id372 . -3) (undo-tree-id373 . -3) (undo-tree-id374 . -3) (undo-tree-id375 . -3) (undo-tree-id376 . -3) (undo-tree-id377 . -3) (undo-tree-id378 . -3) (undo-tree-id379 . -3) (undo-tree-id380 . -3) (undo-tree-id381 . -3) (undo-tree-id382 . -3) (undo-tree-id383 . -3) (undo-tree-id384 . -3) (undo-tree-id385 . -3) (undo-tree-id386 . -3) (undo-tree-id387 . -3) (undo-tree-id388 . -3) (undo-tree-id389 . -3) (undo-tree-id390 . -3) (undo-tree-id391 . -3) (undo-tree-id392 . -3) (undo-tree-id393 . -3) (undo-tree-id394 . -3) (undo-tree-id395 . -3) (undo-tree-id396 . -3) (undo-tree-id397 . -3) (undo-tree-id398 . -3) (undo-tree-id399 . -3) (undo-tree-id400 . -4) (undo-tree-id401 . -4) (undo-tree-id402 . -4) (undo-tree-id403 . -4) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -4) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -4) (undo-tree-id414 . -4) (undo-tree-id415 . -4) (undo-tree-id416 . -4) (undo-tree-id417 . -4) (undo-tree-id418 . -4) (undo-tree-id419 . -4) (undo-tree-id420 . -4) (undo-tree-id421 . -4) (undo-tree-id422 . -4) (undo-tree-id423 . -4) (undo-tree-id424 . -4) (undo-tree-id425 . -3) (undo-tree-id426 . -3) (undo-tree-id427 . -3) (undo-tree-id428 . -3) (undo-tree-id429 . -3) (undo-tree-id430 . -3) (undo-tree-id431 . -3) (undo-tree-id432 . -3) (undo-tree-id433 . -3) (undo-tree-id434 . -3) (undo-tree-id435 . -3) (undo-tree-id436 . -3) (undo-tree-id437 . -3) (undo-tree-id438 . -3) (undo-tree-id439 . -3) (undo-tree-id440 . -3) (undo-tree-id441 . -3) (undo-tree-id442 . -3) (undo-tree-id443 . -3) (undo-tree-id444 . -3) (undo-tree-id445 . -3) (undo-tree-id446 . -3) (undo-tree-id447 . -3) (undo-tree-id448 . -3) (undo-tree-id449 . -3) (undo-tree-id450 . -3) (undo-tree-id451 . -3) (undo-tree-id452 . -3) (undo-tree-id453 . -3) (undo-tree-id454 . -3) (undo-tree-id455 . -3) (undo-tree-id456 . -3) (undo-tree-id457 . -3) (undo-tree-id458 . -3) (undo-tree-id459 . -3) (undo-tree-id460 . -3) (undo-tree-id461 . -3) (undo-tree-id462 . -3) (undo-tree-id463 . -3) (undo-tree-id464 . -3) (undo-tree-id465 . -3) (undo-tree-id466 . -3) (undo-tree-id467 . -3) (undo-tree-id468 . -3) (undo-tree-id469 . -3) (undo-tree-id470 . -3) (undo-tree-id471 . -3) (undo-tree-id472 . -3) (undo-tree-id473 . -3) (undo-tree-id474 . -3) (undo-tree-id475 . -5) (undo-tree-id476 . -3) (undo-tree-id477 . -3) (undo-tree-id478 . -3) (undo-tree-id479 . -3) (undo-tree-id480 . -3) (undo-tree-id481 . -3) (undo-tree-id482 . -3) (undo-tree-id483 . -3) (undo-tree-id484 . -3) (undo-tree-id485 . -3) (undo-tree-id486 . -3) (undo-tree-id487 . -3) (undo-tree-id488 . -3) (undo-tree-id489 . -3) (undo-tree-id490 . -3) (undo-tree-id491 . -3) (undo-tree-id492 . -3) (undo-tree-id493 . -3) (undo-tree-id494 . -3) (undo-tree-id495 . -3) (undo-tree-id496 . -3) (undo-tree-id497 . -3) (undo-tree-id498 . -3) (undo-tree-id499 . -3) (undo-tree-id500 . -3) (undo-tree-id501 . -3) (undo-tree-id502 . -3) (undo-tree-id503 . -3) 431 (t 25369 53280 0 0)) nil (25369 53294 149751 902000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -428) (undo-tree-id117 . -4) (undo-tree-id118 . -4) (undo-tree-id119 . -4) (undo-tree-id120 . -4) (undo-tree-id121 . -4) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (undo-tree-id125 . -4) (undo-tree-id126 . -4) (undo-tree-id127 . -4) (undo-tree-id128 . -4) (undo-tree-id129 . -4) (undo-tree-id130 . -4) (undo-tree-id131 . -4) (undo-tree-id132 . -4) (undo-tree-id133 . -4) (undo-tree-id134 . -4) (undo-tree-id135 . -4) (undo-tree-id136 . -4) (undo-tree-id137 . -4) (undo-tree-id138 . -4) (undo-tree-id139 . -4) (undo-tree-id140 . -4) (undo-tree-id141 . -4) (undo-tree-id142 . -4) (undo-tree-id143 . -4) (undo-tree-id144 . -4) (undo-tree-id145 . -4) (undo-tree-id146 . -4) (undo-tree-id147 . -4) (undo-tree-id148 . -4) (undo-tree-id149 . -4) (undo-tree-id150 . -4) (undo-tree-id151 . -4) (undo-tree-id152 . -4) (undo-tree-id153 . -4) (undo-tree-id154 . -4) (undo-tree-id155 . -4) (undo-tree-id156 . -4) (undo-tree-id157 . -4) (undo-tree-id158 . -4) (undo-tree-id159 . -4) (undo-tree-id160 . -4) (undo-tree-id161 . -4) (undo-tree-id162 . -4) (undo-tree-id163 . -4) (undo-tree-id164 . -4) (undo-tree-id165 . -4) (undo-tree-id166 . -4) (undo-tree-id167 . -4) (undo-tree-id168 . -4) (undo-tree-id169 . -4) (undo-tree-id170 . -4) (undo-tree-id171 . -4) (undo-tree-id172 . -4) (undo-tree-id173 . -4) (undo-tree-id174 . -4) (undo-tree-id175 . -4) (undo-tree-id176 . -4) (undo-tree-id177 . -4) (undo-tree-id178 . -4) (undo-tree-id179 . -4) (undo-tree-id180 . -4) (undo-tree-id181 . -4) (undo-tree-id182 . -4) (undo-tree-id183 . -4) (undo-tree-id184 . -4) (undo-tree-id185 . -4) (undo-tree-id186 . -4) (undo-tree-id187 . -4) (undo-tree-id188 . -4) (undo-tree-id189 . -4) (undo-tree-id190 . -4) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -4) (undo-tree-id195 . -4) (undo-tree-id196 . -4) (undo-tree-id197 . -4) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (undo-tree-id211 . -4) (undo-tree-id212 . -4) (undo-tree-id213 . -4) (undo-tree-id214 . -4) (undo-tree-id215 . -4) (undo-tree-id216 . -4) (undo-tree-id217 . -4) (undo-tree-id218 . -4) (undo-tree-id219 . -4) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -4) (undo-tree-id224 . -4) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (undo-tree-id229 . -4) (undo-tree-id230 . -4) (undo-tree-id231 . -4) (undo-tree-id232 . -4) (undo-tree-id233 . -4) (undo-tree-id234 . -4) (undo-tree-id235 . -4) (undo-tree-id236 . -4) (undo-tree-id237 . -4) (undo-tree-id238 . -4) (undo-tree-id239 . -4) (undo-tree-id240 . -4) (undo-tree-id241 . -4) (undo-tree-id242 . -4) (undo-tree-id243 . -4) 432 (427 . 432)) nil (25369 53294 149439 991000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . -429) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) 430 (426 . 430)) nil (25369 53294 149236 404000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 431) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (t 25369 53286 0 0)) nil (25369 53308 661138 947000) 0 nil])
([nil nil ((448 . 452) (#(" " 0 1 (fontified nil)) . 447) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (448 . 449) (443 . 448) (#("," 0 1 (fontified t)) . -443) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) 444 (441 . 444) (#("," 0 1 (fontified t)) . -441) (undo-tree-id546 . -1) 442 (441 . 442) (435 . 441) (#("ind " 0 4 (fontified t)) . -435) (undo-tree-id547 . -4) 439 (435 . 439) (#("ind " 0 4 (fontified t)) . -435) (undo-tree-id548 . -4) 439 (#("= " 0 2 (fontified t)) . -439) (undo-tree-id549 . -2) 441 (435 . 441) (#("a" 0 1 (fontified t)) . -435) (undo-tree-id550 . -1) 436 (435 . 436) (430 . 435)) nil (25369 53308 660782 896000) 0 nil])
([nil nil ((429 . 435)) nil (25369 53308 660687 213000) 0 nil])
([nil nil ((426 . 427) (#("," 0 1 (fontified t)) . 426) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (t 25369 53301 0 0)) nil (25369 53311 488249 379000) 0 nil])
([nil nil ((#("    
" 0 5 (fontified t)) . 454) (undo-tree-id980 . -3) (undo-tree-id981 . -3) (undo-tree-id982 . -3) (undo-tree-id983 . -3) (undo-tree-id984 . -3) (undo-tree-id985 . -3) (undo-tree-id986 . -3) (undo-tree-id987 . -3) (undo-tree-id988 . -3) (undo-tree-id989 . -3) (undo-tree-id990 . -3) (undo-tree-id991 . -3) (undo-tree-id992 . -3) (undo-tree-id993 . -3) (undo-tree-id994 . -3) (undo-tree-id995 . -3) (undo-tree-id996 . -3) (undo-tree-id997 . -3) (undo-tree-id998 . -3) (undo-tree-id999 . -3) (undo-tree-id1000 . -3) (undo-tree-id1001 . -3) (undo-tree-id1002 . -3) (undo-tree-id1003 . -3) (undo-tree-id1004 . -3) (undo-tree-id1005 . -3) (undo-tree-id1006 . -3) (undo-tree-id1007 . -3) (undo-tree-id1008 . -3) (undo-tree-id1009 . -5) (undo-tree-id1010 . -3) (undo-tree-id1011 . -3) (undo-tree-id1012 . -3) (undo-tree-id1013 . -3) (undo-tree-id1014 . -3) (undo-tree-id1015 . -3) (undo-tree-id1016 . -3) (undo-tree-id1017 . -3) (undo-tree-id1018 . -3) (undo-tree-id1019 . -3) (undo-tree-id1020 . -3) (undo-tree-id1021 . -3) (undo-tree-id1022 . -3) (undo-tree-id1023 . -3) (undo-tree-id1024 . -3) (undo-tree-id1025 . -3) (undo-tree-id1026 . -3) (undo-tree-id1027 . -3) (undo-tree-id1028 . -3) (undo-tree-id1029 . -3) (undo-tree-id1030 . -3) (undo-tree-id1031 . -3) (undo-tree-id1032 . -3) (undo-tree-id1033 . -3) (undo-tree-id1034 . -3) (undo-tree-id1035 . -3) (undo-tree-id1036 . -3) (undo-tree-id1037 . -3) 457 (t 25369 53303 0 0)) nil (25369 53319 656104 978000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -454) (undo-tree-id828 . -4) (undo-tree-id829 . -4) (undo-tree-id830 . -4) (undo-tree-id831 . -4) (undo-tree-id832 . -4) (undo-tree-id833 . -4) (undo-tree-id834 . -4) (undo-tree-id835 . -4) (undo-tree-id836 . -4) (undo-tree-id837 . -4) (undo-tree-id838 . -4) (undo-tree-id839 . -4) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (undo-tree-id842 . -4) (undo-tree-id843 . -4) (undo-tree-id844 . -4) (undo-tree-id845 . -4) (undo-tree-id846 . -4) (undo-tree-id847 . -4) (undo-tree-id848 . -4) (undo-tree-id849 . -4) (undo-tree-id850 . -4) (undo-tree-id851 . -4) (undo-tree-id852 . -4) (undo-tree-id853 . -4) (undo-tree-id854 . -4) (undo-tree-id855 . -4) (undo-tree-id856 . -4) (undo-tree-id857 . -4) (undo-tree-id858 . -4) (undo-tree-id859 . -4) (undo-tree-id860 . -4) (undo-tree-id861 . -4) (undo-tree-id862 . -4) (undo-tree-id863 . -4) (undo-tree-id864 . -4) (undo-tree-id865 . -4) (undo-tree-id866 . -4) (undo-tree-id867 . -4) (undo-tree-id868 . -4) (undo-tree-id869 . -4) (undo-tree-id870 . -4) (undo-tree-id871 . -4) (undo-tree-id872 . -4) (undo-tree-id873 . -4) (undo-tree-id874 . -4) (undo-tree-id875 . -4) (undo-tree-id876 . -4) (undo-tree-id877 . -4) (undo-tree-id878 . -4) (undo-tree-id879 . -4) (undo-tree-id880 . -4) (undo-tree-id881 . -4) (undo-tree-id882 . -4) (undo-tree-id883 . -4) (undo-tree-id884 . -4) (undo-tree-id885 . -4) (undo-tree-id886 . -4) (undo-tree-id887 . -4) (undo-tree-id888 . -4) (undo-tree-id889 . -4) (undo-tree-id890 . -4) (undo-tree-id891 . -4) (undo-tree-id892 . -4) (undo-tree-id893 . -4) (undo-tree-id894 . -4) (undo-tree-id895 . -4) (undo-tree-id896 . -4) (undo-tree-id897 . -4) (undo-tree-id898 . -4) (undo-tree-id899 . -4) (undo-tree-id900 . -4) (undo-tree-id901 . -4) (undo-tree-id902 . -4) (undo-tree-id903 . -4) (undo-tree-id904 . -4) (undo-tree-id905 . -4) (undo-tree-id906 . -4) (undo-tree-id907 . -4) (undo-tree-id908 . -4) (undo-tree-id909 . -4) (undo-tree-id910 . -4) (undo-tree-id911 . -4) (undo-tree-id912 . -4) (undo-tree-id913 . -4) (undo-tree-id914 . -4) (undo-tree-id915 . -4) (undo-tree-id916 . -4) (undo-tree-id917 . -4) (undo-tree-id918 . -4) (undo-tree-id919 . -4) (undo-tree-id920 . -4) (undo-tree-id921 . -4) (undo-tree-id922 . -4) (undo-tree-id923 . -4) (undo-tree-id924 . -4) (undo-tree-id925 . -4) (undo-tree-id926 . -4) (undo-tree-id927 . -4) (undo-tree-id928 . -4) (undo-tree-id929 . -4) (undo-tree-id930 . -4) (undo-tree-id931 . -4) (undo-tree-id932 . -4) (undo-tree-id933 . -4) (undo-tree-id934 . -4) (undo-tree-id935 . -4) (undo-tree-id936 . -4) (undo-tree-id937 . -4) (undo-tree-id938 . -4) (undo-tree-id939 . -4) (undo-tree-id940 . -4) (undo-tree-id941 . -4) (undo-tree-id942 . -4) (undo-tree-id943 . -4) (undo-tree-id944 . -4) (undo-tree-id945 . -4) (undo-tree-id946 . -4) (undo-tree-id947 . -4) (undo-tree-id948 . -4) (undo-tree-id949 . -4) (undo-tree-id950 . -4) (undo-tree-id951 . -4) (undo-tree-id952 . -4) (undo-tree-id953 . -4) (undo-tree-id954 . -4) (undo-tree-id955 . -4) (undo-tree-id956 . -4) (undo-tree-id957 . -4) (undo-tree-id958 . -4) (undo-tree-id959 . -4) (undo-tree-id960 . -4) (undo-tree-id961 . -4) (undo-tree-id962 . -4) (undo-tree-id963 . -4) (undo-tree-id964 . -4) (undo-tree-id965 . -4) (undo-tree-id966 . -4) (undo-tree-id967 . -4) (undo-tree-id968 . -4) (undo-tree-id969 . -4) (undo-tree-id970 . -4) (undo-tree-id971 . -4) (undo-tree-id972 . -4) (undo-tree-id973 . -4) (undo-tree-id974 . -4) (undo-tree-id975 . -4) (undo-tree-id976 . -4) (undo-tree-id977 . -4) (undo-tree-id978 . -4) (undo-tree-id979 . -4) 458 (453 . 458)) nil (25369 53319 655992 44000) 0 nil])
([nil nil ((451 . 452)) nil (25369 53319 655771 66000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 455) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (t 25369 53312 0 0)) nil (25369 53327 120070 347000) 0 nil])
([nil nil ((464 . 479) (459 . 464) (#("aupr" 0 4 (fontified t)) . -459) (undo-tree-id1038 . -4) 463 (459 . 463) (454 . 459)) nil (25373 35689 480728 468000) 0 nil])
([nil nil ((#(", " 0 1 (fontified nil) 1 2 (fontified nil)) . 479) (undo-tree-id3 . -1) (479 . 481)) ((#(", " 0 1 (fontified nil) 1 2 (fontified nil)) . 479) (undo-tree-id2 . -1) (479 . 481) (t 25369 53332 0 0)) (25373 35691 161258 982000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . 634) (t 25369 53332 0 0)) nil (25373 45139 649380 112000) 0 nil] [nil nil ((15 . 17) (t 25369 53332 0 0)) ((#("nf" 0 2 (fontified t face font-lock-type-face)) . 15)) (25373 35690 530591 963000) 0 nil])
([nil current ((#("=" 0 1 (fontified t)) . 599)) nil (25373 45139 649373 128000) 0 nil])
nil
nil
